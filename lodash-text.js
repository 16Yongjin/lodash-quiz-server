const quizzes = [
  {
    input: `['a', 'b', 'c', 'd']`,
    output: `[['a', 'b'], ['c', 'd']]`,
    answer: `_.chunk(['a', 'b', 'c', 'd'], 2);`,
  },
  {
    input: `[0, 1, false, 2, '', 3]`,
    output: `[1, 2, 3]`,
    answer: `_.compact([0, 1, false, 2, '', 3]);`,
  },
  {
    input: `[1], 2, [3], [[4]]`,
    output: `[1, 2, 3, [4]]`,
    answer: `_.concat(array, 2, [3], [[4]]);`,
  },
  {
    input: `[2, 1], [2, 3]`,
    output: `[1]`,
    answer: `_.difference([2, 1], [2, 3]);`,
  },
  {
    input: `[1, 2, 3]`,
    output: `[2, 3]`,
    answer: `_.drop([1, 2, 3]);`,
  },
  {
    input: `[1, 2, 3]`,
    output: `[1, 2]`,
    answer: `_.dropRight([1, 2, 3]);`,
  },
  {
    input: `[\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n],\n function(o) { return !o.active; }`,
    output: ``,
    answer: ``,
  },
  {
    input: `[1, 2, 3], 'a'`,
    output: `['a', 'a', 'a']`,
    answer: `_.fill(array, 'a');`,
  },
  {
    input: `[1, [2, [3, [4]], 5]]`,
    output: `[1, 2, [3, [4]], 5]`,
    answer: `_.flatten([1, [2, [3, [4]], 5]]);`,
  },
  {
    input: `[1, [2, [3, [4]], 5]]`,
    output: `[1, 2, 3, 4, 5]`,
    answer: `_.flattenDeep([1, [2, [3, [4]], 5]]);`,
  },
]

const a = [
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n \n_.dropRightWhile(users, function(o) { return !o.active; });\n// => objects for ['barney']\n \n// The `_.matches` iteratee shorthand.\n_.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['barney', 'fred']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.dropRightWhile(users, ['active', false]);\n// => objects for ['barney']\n \n// The `_.property` iteratee shorthand.\n_.dropRightWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': true },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': false }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['barney']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'pebbles', 'active': false }",
      "// => objects for ['barney', 'fred']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['barney']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => objects for ['barney', 'fred', 'pebbles']",
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n \n_.dropWhile(users, function(o) { return !o.active; });\n// => objects for ['pebbles']\n \n// The `_.matches` iteratee shorthand.\n_.dropWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['fred', 'pebbles']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.dropWhile(users, ['active', false]);\n// => objects for ['pebbles']\n \n// The `_.property` iteratee shorthand.\n_.dropWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': false },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': true }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['pebbles']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'barney', 'active': false }",
      "// => objects for ['fred', 'pebbles']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['pebbles']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => objects for ['barney', 'fred', 'pebbles']",
    ],
  },
  {
    text:
      "var array = [1, 2, 3];\n \n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n \n_.fill(Array(3), 2);\n// => [2, 2, 2]\n \n_.fill([4, 6, 8, 10], '*', 1, 3);\n// => [4, '*', '*', 10]",
    parsed: [
      'var array = [1, 2, 3];',
      ' ',
      "array, 'a'",
      'console.log(array);',
      "// => ['a', 'a', 'a']",
      ' ',
      'Array(3), 2',
      '// => [2, 2, 2]',
      ' ',
      "[4, 6, 8, 10], '*', 1, 3",
      "// => [4, '*', '*', 10]",
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n \n_.findIndex(users, function(o) { return o.user == 'barney'; });\n// => 0\n \n// The `_.matches` iteratee shorthand.\n_.findIndex(users, { 'user': 'fred', 'active': false });\n// => 1\n \n// The `_.matchesProperty` iteratee shorthand.\n_.findIndex(users, ['active', false]);\n// => 0\n \n// The `_.property` iteratee shorthand.\n_.findIndex(users, 'active');\n// => 2",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': false },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': true }",
      '];',
      ' ',
      "users, function(o) { return o.user == 'barney'; }",
      '// => 0',
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'fred', 'active': false }",
      '// => 1',
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      '// => 0',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => 2',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n \n_.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n// => 2\n \n// The `_.matches` iteratee shorthand.\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\n// => 0\n \n// The `_.matchesProperty` iteratee shorthand.\n_.findLastIndex(users, ['active', false]);\n// => 2\n \n// The `_.property` iteratee shorthand.\n_.findLastIndex(users, 'active');\n// => 0",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': true },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': false }",
      '];',
      ' ',
      "users, function(o) { return o.user == 'pebbles'; }",
      '// => 2',
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'barney', 'active': true }",
      '// => 0',
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      '// => 2',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => 0',
    ],
  },
  {
    text: '_.flatten([1, [2, [3, [4]], 5]]);\n// => [1, 2, [3, [4]], 5]',
    parsed: ['[1, [2, [3, [4]], 5]]', '// => [1, 2, [3, [4]], 5]'],
  },
  {
    text: '_.flattenDeep([1, [2, [3, [4]], 5]]);\n// => [1, 2, 3, 4, 5]',
    parsed: ['[1, [2, [3, [4]], 5]]', '// => [1, 2, 3, 4, 5]'],
  },
  {
    text:
      'var array = [1, [2, [3, [4]], 5]];\n \n_.flattenDepth(array, 1);\n// => [1, 2, [3, [4]], 5]\n \n_.flattenDepth(array, 2);\n// => [1, 2, 3, [4], 5]',
    parsed: [
      'var array = [1, [2, [3, [4]], 5]];',
      ' ',
      'array, 1',
      '// => [1, 2, [3, [4]], 5]',
      ' ',
      'array, 2',
      '// => [1, 2, 3, [4], 5]',
    ],
  },
  {
    text: "_.fromPairs([['a', 1], ['b', 2]]);\n// => { 'a': 1, 'b': 2 }",
    parsed: ["[['a', 1], ['b', 2]]", "// => { 'a': 1, 'b': 2 }"],
  },
  {
    text: '_.head([1, 2, 3]);\n// => 1\n \n_.head([]);\n// => undefined',
    parsed: ['[1, 2, 3]', '// => 1', ' ', '[]', '// => undefined'],
  },
  {
    text:
      '_.indexOf([1, 2, 1, 2], 2);\n// => 1\n \n// Search from the `fromIndex`.\n_.indexOf([1, 2, 1, 2], 2, 2);\n// => 3',
    parsed: [
      '[1, 2, 1, 2], 2',
      '// => 1',
      ' ',
      '// Search from the `fromIndex`.',
      '[1, 2, 1, 2], 2, 2',
      '// => 3',
    ],
  },
  {
    text: '_.initial([1, 2, 3]);\n// => [1, 2]',
    parsed: ['[1, 2, 3]', '// => [1, 2]'],
  },
  {
    text: '_.intersection([2, 1], [2, 3]);\n// => [2]',
    parsed: ['[2, 1], [2, 3]', '// => [2]'],
  },
  {
    text:
      "_.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [2.1]\n \n// The `_.property` iteratee shorthand.\n_.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }]",
    parsed: [
      '[2.1, 1.2], [2.3, 3.4], Math.floor',
      '// => [2.1]',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "[{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x'",
      "// => [{ 'x': 1 }]",
    ],
  },
  {
    text:
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n \n_.intersectionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }]",
    parsed: [
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];",
      "var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];",
      ' ',
      'objects, others, _.isEqual',
      "// => [{ 'x': 1, 'y': 2 }]",
    ],
  },
  {
    text: "_.join(['a', 'b', 'c'], '~');\n// => 'a~b~c'",
    parsed: ["['a', 'b', 'c'], '~'", "// => 'a~b~c'"],
  },
  {
    text: '_.last([1, 2, 3]);\n// => 3',
    parsed: ['[1, 2, 3]', '// => 3'],
  },
  {
    text:
      '_.lastIndexOf([1, 2, 1, 2], 2);\n// => 3\n \n// Search from the `fromIndex`.\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\n// => 1',
    parsed: [
      '[1, 2, 1, 2], 2',
      '// => 3',
      ' ',
      '// Search from the `fromIndex`.',
      '[1, 2, 1, 2], 2, 2',
      '// => 1',
    ],
  },
  {
    text:
      "var array = ['a', 'b', 'c', 'd'];\n \n_.nth(array, 1);\n// => 'b'\n \n_.nth(array, -2);\n// => 'c';",
    parsed: [
      "var array = ['a', 'b', 'c', 'd'];",
      ' ',
      'array, 1',
      "// => 'b'",
      ' ',
      'array, -2',
      "// => 'c';",
    ],
  },
  {
    text:
      "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n \n_.pull(array, 'a', 'c');\nconsole.log(array);\n// => ['b', 'b']",
    parsed: [
      "var array = ['a', 'b', 'c', 'a', 'b', 'c'];",
      ' ',
      "array, 'a', 'c'",
      'console.log(array);',
      "// => ['b', 'b']",
    ],
  },
  {
    text:
      "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n \n_.pullAll(array, ['a', 'c']);\nconsole.log(array);\n// => ['b', 'b']",
    parsed: [
      "var array = ['a', 'b', 'c', 'a', 'b', 'c'];",
      ' ',
      "array, ['a', 'c']",
      'console.log(array);',
      "// => ['b', 'b']",
    ],
  },
  {
    text:
      "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n \n_.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\nconsole.log(array);\n// => [{ 'x': 2 }]",
    parsed: [
      "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];",
      ' ',
      "array, [{ 'x': 1 }, { 'x': 3 }], 'x'",
      'console.log(array);',
      "// => [{ 'x': 2 }]",
    ],
  },
  {
    text:
      "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n \n_.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\nconsole.log(array);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]",
    parsed: [
      "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];",
      ' ',
      "array, [{ 'x': 3, 'y': 4 }], _.isEqual",
      'console.log(array);',
      "// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]",
    ],
  },
  {
    text:
      "var array = ['a', 'b', 'c', 'd'];\nvar pulled = _.pullAt(array, [1, 3]);\n \nconsole.log(array);\n// => ['a', 'c']\n \nconsole.log(pulled);\n// => ['b', 'd']",
    parsed: [
      "var array = ['a', 'b', 'c', 'd'];",
      'array, [1, 3]',
      ' ',
      'console.log(array);',
      "// => ['a', 'c']",
      ' ',
      'console.log(pulled);',
      "// => ['b', 'd']",
    ],
  },
  {
    text:
      'var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n \nconsole.log(array);\n// => [1, 3]\n \nconsole.log(evens);\n// => [2, 4]',
    parsed: [
      'var array = [1, 2, 3, 4];',
      'array, function(n',
      '  return n % 2 == 0;',
      '});',
      ' ',
      'console.log(array);',
      '// => [1, 3]',
      ' ',
      'console.log(evens);',
      '// => [2, 4]',
    ],
  },
  {
    text:
      'var array = [1, 2, 3];\n \n_.reverse(array);\n// => [3, 2, 1]\n \nconsole.log(array);\n// => [3, 2, 1]',
    parsed: [
      'var array = [1, 2, 3];',
      ' ',
      'array',
      '// => [3, 2, 1]',
      ' ',
      'console.log(array);',
      '// => [3, 2, 1]',
    ],
  },
  {
    text: '_.sortedIndex([30, 50], 40);\n// => 1',
    parsed: ['[30, 50], 40', '// => 1'],
  },
  {
    text:
      "var objects = [{ 'x': 4 }, { 'x': 5 }];\n \n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n \n// The `_.property` iteratee shorthand.\n_.sortedIndexBy(objects, { 'x': 4 }, 'x');\n// => 0",
    parsed: [
      "var objects = [{ 'x': 4 }, { 'x': 5 }];",
      ' ',
      "objects, { 'x': 4 }, function(o) { return o.x; }",
      '// => 0',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, { 'x': 4 }, 'x'",
      '// => 0',
    ],
  },
  {
    text: '_.sortedIndexOf([4, 5, 5, 5, 6], 5);\n// => 1',
    parsed: ['[4, 5, 5, 5, 6], 5', '// => 1'],
  },
  {
    text: '_.sortedLastIndex([4, 5, 5, 5, 6], 5);\n// => 4',
    parsed: ['[4, 5, 5, 5, 6], 5', '// => 4'],
  },
  {
    text:
      "var objects = [{ 'x': 4 }, { 'x': 5 }];\n \n_.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 1\n \n// The `_.property` iteratee shorthand.\n_.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n// => 1",
    parsed: [
      "var objects = [{ 'x': 4 }, { 'x': 5 }];",
      ' ',
      "objects, { 'x': 4 }, function(o) { return o.x; }",
      '// => 1',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, { 'x': 4 }, 'x'",
      '// => 1',
    ],
  },
  {
    text: '_.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n// => 3',
    parsed: ['[4, 5, 5, 5, 6], 5', '// => 3'],
  },
  {
    text: '_.sortedUniq([1, 1, 2]);\n// => [1, 2]',
    parsed: ['[1, 1, 2]', '// => [1, 2]'],
  },
  {
    text: '_.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n// => [1.1, 2.3]',
    parsed: ['[1.1, 1.2, 2.3, 2.4], Math.floor', '// => [1.1, 2.3]'],
  },
  {
    text: '_.tail([1, 2, 3]);\n// => [2, 3]',
    parsed: ['[1, 2, 3]', '// => [2, 3]'],
  },
  {
    text:
      '_.take([1, 2, 3]);\n// => [1]\n \n_.take([1, 2, 3], 2);\n// => [1, 2]\n \n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n \n_.take([1, 2, 3], 0);\n// => []',
    parsed: [
      '[1, 2, 3]',
      '// => [1]',
      ' ',
      '[1, 2, 3], 2',
      '// => [1, 2]',
      ' ',
      '[1, 2, 3], 5',
      '// => [1, 2, 3]',
      ' ',
      '[1, 2, 3], 0',
      '// => []',
    ],
  },
  {
    text:
      '_.takeRight([1, 2, 3]);\n// => [3]\n \n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n \n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n \n_.takeRight([1, 2, 3], 0);\n// => []',
    parsed: [
      '[1, 2, 3]',
      '// => [3]',
      ' ',
      '[1, 2, 3], 2',
      '// => [2, 3]',
      ' ',
      '[1, 2, 3], 5',
      '// => [1, 2, 3]',
      ' ',
      '[1, 2, 3], 0',
      '// => []',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n \n_.takeRightWhile(users, function(o) { return !o.active; });\n// => objects for ['fred', 'pebbles']\n \n// The `_.matches` iteratee shorthand.\n_.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['pebbles']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.takeRightWhile(users, ['active', false]);\n// => objects for ['fred', 'pebbles']\n \n// The `_.property` iteratee shorthand.\n_.takeRightWhile(users, 'active');\n// => []",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': true },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': false }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['fred', 'pebbles']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'pebbles', 'active': false }",
      "// => objects for ['pebbles']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['fred', 'pebbles']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => []',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n \n_.takeWhile(users, function(o) { return !o.active; });\n// => objects for ['barney', 'fred']\n \n// The `_.matches` iteratee shorthand.\n_.takeWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['barney']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.takeWhile(users, ['active', false]);\n// => objects for ['barney', 'fred']\n \n// The `_.property` iteratee shorthand.\n_.takeWhile(users, 'active');\n// => []",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'active': false },",
      "  { 'user': 'fred',    'active': false },",
      "  { 'user': 'pebbles', 'active': true }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['barney', 'fred']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'barney', 'active': false }",
      "// => objects for ['barney']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['barney', 'fred']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => []',
    ],
  },
  {
    text: '_.union([2], [1, 2]);\n// => [2, 1]',
    parsed: ['[2], [1, 2]', '// => [2, 1]'],
  },
  {
    text:
      "_.unionBy([2.1], [1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n \n// The `_.property` iteratee shorthand.\n_.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]",
    parsed: [
      '[2.1], [1.2, 2.3], Math.floor',
      '// => [2.1, 1.2]',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "[{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x'",
      "// => [{ 'x': 1 }, { 'x': 2 }]",
    ],
  },
  {
    text:
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n \n_.unionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]",
    parsed: [
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];",
      "var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];",
      ' ',
      'objects, others, _.isEqual',
      "// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]",
    ],
  },
  {
    text: '_.uniq([2, 1, 2]);\n// => [2, 1]',
    parsed: ['[2, 1, 2]', '// => [2, 1]'],
  },
  {
    text:
      "_.uniqBy([2.1, 1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n \n// The `_.property` iteratee shorthand.\n_.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]",
    parsed: [
      '[2.1, 1.2, 2.3], Math.floor',
      '// => [2.1, 1.2]',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "[{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x'",
      "// => [{ 'x': 1 }, { 'x': 2 }]",
    ],
  },
  {
    text:
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n \n_.uniqWith(objects, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]",
    parsed: [
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];",
      ' ',
      'objects, _.isEqual',
      "// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]",
    ],
  },
  {
    text:
      "var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n \n_.unzip(zipped);\n// => [['a', 'b'], [1, 2], [true, false]]",
    parsed: [
      "['a', 'b'], [1, 2], [true, false]",
      "// => [['a', 1, true], ['b', 2, false]]",
      ' ',
      'zipped',
      "// => [['a', 'b'], [1, 2], [true, false]]",
    ],
  },
  {
    text:
      'var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n// => [[1, 10, 100], [2, 20, 200]]\n \n_.unzipWith(zipped, _.add);\n// => [3, 30, 300]',
    parsed: [
      '[1, 2], [10, 20], [100, 200]',
      '// => [[1, 10, 100], [2, 20, 200]]',
      ' ',
      'zipped, _.add',
      '// => [3, 30, 300]',
    ],
  },
  {
    text: '_.without([2, 1, 2, 3], 1, 2);\n// => [3]',
    parsed: ['[2, 1, 2, 3], 1, 2', '// => [3]'],
  },
  {
    text: '_.xor([2, 1], [2, 3]);\n// => [1, 3]',
    parsed: ['[2, 1], [2, 3]', '// => [1, 3]'],
  },
  {
    text:
      "_.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2, 3.4]\n \n// The `_.property` iteratee shorthand.\n_.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 2 }]",
    parsed: [
      '[2.1, 1.2], [2.3, 3.4], Math.floor',
      '// => [1.2, 3.4]',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "[{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x'",
      "// => [{ 'x': 2 }]",
    ],
  },
  {
    text:
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n \n_.xorWith(objects, others, _.isEqual);\n// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]",
    parsed: [
      "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];",
      "var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];",
      ' ',
      'objects, others, _.isEqual',
      "// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]",
    ],
  },
  {
    text:
      "_.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]",
    parsed: [
      "['a', 'b'], [1, 2], [true, false]",
      "// => [['a', 1, true], ['b', 2, false]]",
    ],
  },
  {
    text: "_.zipObject(['a', 'b'], [1, 2]);\n// => { 'a': 1, 'b': 2 }",
    parsed: ["['a', 'b'], [1, 2]", "// => { 'a': 1, 'b': 2 }"],
  },
  {
    text:
      "_.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }",
    parsed: [
      "['a.b[0].c', 'a.b[1].d'], [1, 2]",
      "// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }",
    ],
  },
  {
    text:
      '_.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n  return a + b + c;\n});\n// => [111, 222]',
    parsed: [
      '[1, 2], [10, 20], [100, 200], function(a, b, c',
      '  return a + b + c;',
      '});',
      '// => [111, 222]',
    ],
  },
  {
    text:
      "_.countBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': 1, '6': 2 }\n \n// The `_.property` iteratee shorthand.\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }",
    parsed: [
      '[6.1, 4.2, 6.3], Math.floor',
      "// => { '4': 1, '6': 2 }",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "['one', 'two', 'three'], 'length'",
      "// => { '3': 2, '5': 1 }",
    ],
  },
  {
    text:
      "_.every([true, 1, null, 'yes'], Boolean);\n// => false\n \nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n \n// The `_.matches` iteratee shorthand.\n_.every(users, { 'user': 'barney', 'active': false });\n// => false\n \n// The `_.matchesProperty` iteratee shorthand.\n_.every(users, ['active', false]);\n// => true\n \n// The `_.property` iteratee shorthand.\n_.every(users, 'active');\n// => false",
    parsed: [
      "[true, 1, null, 'yes'], Boolean",
      '// => false',
      ' ',
      'var users = [',
      "  { 'user': 'barney', 'age': 36, 'active': false },",
      "  { 'user': 'fred',   'age': 40, 'active': false }",
      '];',
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'barney', 'active': false }",
      '// => false',
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      '// => true',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => false',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n \n_.filter(users, function(o) { return !o.active; });\n// => objects for ['fred']\n \n// The `_.matches` iteratee shorthand.\n_.filter(users, { 'age': 36, 'active': true });\n// => objects for ['barney']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, ['active', false]);\n// => objects for ['fred']\n \n// The `_.property` iteratee shorthand.\n_.filter(users, 'active');\n// => objects for ['barney']",
    parsed: [
      'var users = [',
      "  { 'user': 'barney', 'age': 36, 'active': true },",
      "  { 'user': 'fred',   'age': 40, 'active': false }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['fred']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 36, 'active': true }",
      "// => objects for ['barney']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['fred']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => objects for ['barney']",
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': true }\n];\n \n_.find(users, function(o) { return o.age < 40; });\n// => object for 'barney'\n \n// The `_.matches` iteratee shorthand.\n_.find(users, { 'age': 1, 'active': true });\n// => object for 'pebbles'\n \n// The `_.matchesProperty` iteratee shorthand.\n_.find(users, ['active', false]);\n// => object for 'fred'\n \n// The `_.property` iteratee shorthand.\n_.find(users, 'active');\n// => object for 'barney'",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'age': 36, 'active': true },",
      "  { 'user': 'fred',    'age': 40, 'active': false },",
      "  { 'user': 'pebbles', 'age': 1,  'active': true }",
      '];',
      ' ',
      'users, function(o) { return o.age < 40; }',
      "// => object for 'barney'",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 1, 'active': true }",
      "// => object for 'pebbles'",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => object for 'fred'",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => object for 'barney'",
    ],
  },
  {
    text:
      '_.findLast([1, 2, 3, 4], function(n) {\n  return n % 2 == 1;\n});\n// => 3',
    parsed: [
      '[1, 2, 3, 4], function(n',
      '  return n % 2 == 1;',
      '});',
      '// => 3',
    ],
  },
  {
    text:
      'function duplicate(n) {\n  return [n, n];\n}\n \n_.flatMap([1, 2], duplicate);\n// => [1, 1, 2, 2]',
    parsed: [
      'function duplicate(n) {',
      '  return [n, n];',
      '}',
      ' ',
      '[1, 2], duplicate',
      '// => [1, 1, 2, 2]',
    ],
  },
  {
    text:
      'function duplicate(n) {\n  return [[[n, n]]];\n}\n \n_.flatMapDeep([1, 2], duplicate);\n// => [1, 1, 2, 2]',
    parsed: [
      'function duplicate(n) {',
      '  return [[[n, n]]];',
      '}',
      ' ',
      '[1, 2], duplicate',
      '// => [1, 1, 2, 2]',
    ],
  },
  {
    text:
      'function duplicate(n) {\n  return [[[n, n]]];\n}\n \n_.flatMapDepth([1, 2], duplicate, 2);\n// => [[1, 1], [2, 2]]',
    parsed: [
      'function duplicate(n) {',
      '  return [[[n, n]]];',
      '}',
      ' ',
      '[1, 2], duplicate, 2',
      '// => [[1, 1], [2, 2]]',
    ],
  },
  {
    text:
      "_.forEach([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `1` then `2`.\n \n_.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).",
    parsed: [
      '[1, 2], function(value',
      '  console.log(value);',
      '});',
      '// => Logs `1` then `2`.',
      ' ',
      "{ 'a': 1, 'b': 2 }, function(value, key",
      '  console.log(key);',
      '});',
      "// => Logs 'a' then 'b' (iteration order is not guaranteed).",
    ],
  },
  {
    text:
      '_.forEachRight([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `2` then `1`.',
    parsed: [
      '[1, 2], function(value',
      '  console.log(value);',
      '});',
      '// => Logs `2` then `1`.',
    ],
  },
  {
    text:
      "_.groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n \n// The `_.property` iteratee shorthand.\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }",
    parsed: [
      '[6.1, 4.2, 6.3], Math.floor',
      "// => { '4': [4.2], '6': [6.1, 6.3] }",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "['one', 'two', 'three'], 'length'",
      "// => { '3': ['one', 'two'], '5': ['three'] }",
    ],
  },
  {
    text:
      "_.includes([1, 2, 3], 1);\n// => true\n \n_.includes([1, 2, 3], 1, 2);\n// => false\n \n_.includes({ 'a': 1, 'b': 2 }, 1);\n// => true\n \n_.includes('abcd', 'bc');\n// => true",
    parsed: [
      '[1, 2, 3], 1',
      '// => true',
      ' ',
      '[1, 2, 3], 1, 2',
      '// => false',
      ' ',
      "{ 'a': 1, 'b': 2 }, 1",
      '// => true',
      ' ',
      "'abcd', 'bc'",
      '// => true',
    ],
  },
  {
    text:
      "_.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n \n_.invokeMap([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]",
    parsed: [
      "[[5, 1, 7], [3, 2, 1]], 'sort'",
      '// => [[1, 5, 7], [1, 2, 3]]',
      ' ',
      "[123, 456], String.prototype.split, ''",
      "// => [['1', '2', '3'], ['4', '5', '6']]",
    ],
  },
  {
    text:
      "var array = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n \n_.keyBy(array, function(o) {\n  return String.fromCharCode(o.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n \n_.keyBy(array, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }",
    parsed: [
      'var array = [',
      "  { 'dir': 'left', 'code': 97 },",
      "  { 'dir': 'right', 'code': 100 }",
      '];',
      ' ',
      'array, function(o',
      '  return String.fromCharCode(o.code);',
      '});',
      "// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }",
      ' ',
      "array, 'dir'",
      "// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }",
    ],
  },
  {
    text:
      "function square(n) {\n  return n * n;\n}\n \n_.map([4, 8], square);\n// => [16, 64]\n \n_.map({ 'a': 4, 'b': 8 }, square);\n// => [16, 64] (iteration order is not guaranteed)\n \nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n \n// The `_.property` iteratee shorthand.\n_.map(users, 'user');\n// => ['barney', 'fred']",
    parsed: [
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      '[4, 8], square',
      '// => [16, 64]',
      ' ',
      "{ 'a': 4, 'b': 8 }, square",
      '// => [16, 64] (iteration order is not guaranteed)',
      ' ',
      'var users = [',
      "  { 'user': 'barney' },",
      "  { 'user': 'fred' }",
      '];',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'user'",
      "// => ['barney', 'fred']",
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 34 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 36 }\n];\n \n// Sort by `user` in ascending order and by `age` in descending order.\n_.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]",
    parsed: [
      'var users = [',
      "  { 'user': 'fred',   'age': 48 },",
      "  { 'user': 'barney', 'age': 34 },",
      "  { 'user': 'fred',   'age': 40 },",
      "  { 'user': 'barney', 'age': 36 }",
      '];',
      ' ',
      '// Sort by `user` in ascending order and by `age` in descending order.',
      "users, ['user', 'age'], ['asc', 'desc']",
      "// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]",
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n \n_.partition(users, function(o) { return o.active; });\n// => objects for [['fred'], ['barney', 'pebbles']]\n \n// The `_.matches` iteratee shorthand.\n_.partition(users, { 'age': 1, 'active': false });\n// => objects for [['pebbles'], ['barney', 'fred']]\n \n// The `_.matchesProperty` iteratee shorthand.\n_.partition(users, ['active', false]);\n// => objects for [['barney', 'pebbles'], ['fred']]\n \n// The `_.property` iteratee shorthand.\n_.partition(users, 'active');\n// => objects for [['fred'], ['barney', 'pebbles']]",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'age': 36, 'active': false },",
      "  { 'user': 'fred',    'age': 40, 'active': true },",
      "  { 'user': 'pebbles', 'age': 1,  'active': false }",
      '];',
      ' ',
      'users, function(o) { return o.active; }',
      "// => objects for [['fred'], ['barney', 'pebbles']]",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 1, 'active': false }",
      "// => objects for [['pebbles'], ['barney', 'fred']]",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for [['barney', 'pebbles'], ['fred']]",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => objects for [['fred'], ['barney', 'pebbles']]",
    ],
  },
  {
    text:
      "_.reduce([1, 2], function(sum, n) {\n  return sum + n;\n}, 0);\n// => 3\n \n_.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n  return result;\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)",
    parsed: [
      '[1, 2], function(sum, n',
      '  return sum + n;',
      '}, 0);',
      '// => 3',
      ' ',
      "{ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key",
      '  (result[value] || (result[value] = [])).push(key);',
      '  return result;',
      '}, {});',
      "// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)",
    ],
  },
  {
    text:
      'var array = [[0, 1], [2, 3], [4, 5]];\n \n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]',
    parsed: [
      'var array = [[0, 1], [2, 3], [4, 5]];',
      ' ',
      'array, function(flattened, other',
      '  return flattened.concat(other);',
      '}, []);',
      '// => [4, 5, 2, 3, 0, 1]',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n \n_.reject(users, function(o) { return !o.active; });\n// => objects for ['fred']\n \n// The `_.matches` iteratee shorthand.\n_.reject(users, { 'age': 40, 'active': true });\n// => objects for ['barney']\n \n// The `_.matchesProperty` iteratee shorthand.\n_.reject(users, ['active', false]);\n// => objects for ['fred']\n \n// The `_.property` iteratee shorthand.\n_.reject(users, 'active');\n// => objects for ['barney']",
    parsed: [
      'var users = [',
      "  { 'user': 'barney', 'age': 36, 'active': false },",
      "  { 'user': 'fred',   'age': 40, 'active': true }",
      '];',
      ' ',
      'users, function(o) { return !o.active; }',
      "// => objects for ['fred']",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 40, 'active': true }",
      "// => objects for ['barney']",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => objects for ['fred']",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => objects for ['barney']",
    ],
  },
  {
    text: '_.sample([1, 2, 3, 4]);\n// => 2',
    parsed: ['[1, 2, 3, 4]', '// => 2'],
  },
  {
    text:
      '_.sampleSize([1, 2, 3], 2);\n// => [3, 1]\n \n_.sampleSize([1, 2, 3], 4);\n// => [2, 3, 1]',
    parsed: [
      '[1, 2, 3], 2',
      '// => [3, 1]',
      ' ',
      '[1, 2, 3], 4',
      '// => [2, 3, 1]',
    ],
  },
  {
    text: '_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]',
    parsed: ['[1, 2, 3, 4]', '// => [4, 1, 3, 2]'],
  },
  {
    text:
      "_.size([1, 2, 3]);\n// => 3\n \n_.size({ 'a': 1, 'b': 2 });\n// => 2\n \n_.size('pebbles');\n// => 7",
    parsed: [
      '[1, 2, 3]',
      '// => 3',
      ' ',
      "{ 'a': 1, 'b': 2 }",
      '// => 2',
      ' ',
      "'pebbles'",
      '// => 7',
    ],
  },
  {
    text:
      "_.some([null, 0, 'yes', false], Boolean);\n// => true\n \nvar users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred',   'active': false }\n];\n \n// The `_.matches` iteratee shorthand.\n_.some(users, { 'user': 'barney', 'active': false });\n// => false\n \n// The `_.matchesProperty` iteratee shorthand.\n_.some(users, ['active', false]);\n// => true\n \n// The `_.property` iteratee shorthand.\n_.some(users, 'active');\n// => true",
    parsed: [
      "[null, 0, 'yes', false], Boolean",
      '// => true',
      ' ',
      'var users = [',
      "  { 'user': 'barney', 'active': true },",
      "  { 'user': 'fred',   'active': false }",
      '];',
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'user': 'barney', 'active': false }",
      '// => false',
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      '// => true',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      '// => true',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 34 }\n];\n \n_.sortBy(users, [function(o) { return o.user; }]);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n \n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]",
    parsed: [
      'var users = [',
      "  { 'user': 'fred',   'age': 48 },",
      "  { 'user': 'barney', 'age': 36 },",
      "  { 'user': 'fred',   'age': 40 },",
      "  { 'user': 'barney', 'age': 34 }",
      '];',
      ' ',
      'users, [function(o) { return o.user; }]',
      "// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]",
      ' ',
      "users, ['user', 'age']",
      "// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]",
    ],
  },
  {
    text:
      '_.defer(function(stamp) {\n  console.log(_.now() - stamp);\n}, _.now());\n// => Logs the number of milliseconds it took for the deferred invocation.',
    parsed: [
      'function(stamp',
      ') - stamp',
      ')',
      '// => Logs the number of milliseconds it took for the deferred invocation.',
    ],
  },
  {
    text:
      "var saves = ['profile', 'settings'];\n \nvar done = _.after(saves.length, function() {\n  console.log('done saving!');\n});\n \n_.forEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => Logs 'done saving!' after the two async saves have completed.",
    parsed: [
      "var saves = ['profile', 'settings'];",
      ' ',
      'saves.length, function(',
      "  console.log('done saving!');",
      '});',
      ' ',
      'saves, function(type',
      "  asyncSave({ 'type': type, 'complete': done });",
      '});',
      "// => Logs 'done saving!' after the two async saves have completed.",
    ],
  },
  {
    text: "_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]",
    parsed: ["['6', '8', '10'], _.ary(parseInt, 1)", '// => [6, 8, 10]'],
  },
  {
    text:
      "jQuery(element).on('click', _.before(5, addContactToList));\n// => Allows adding up to 4 contacts to the list.",
    parsed: [
      '5, addContactToList)',
      '// => Allows adding up to 4 contacts to the list.',
    ],
  },
  {
    text:
      "function greet(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n}\n \nvar object = { 'user': 'fred' };\n \nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n \n// Bound with placeholders.\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'",
    parsed: [
      'function greet(greeting, punctuation) {',
      "  return greeting + ' ' + this.user + punctuation;",
      '}',
      ' ',
      "var object = { 'user': 'fred' };",
      ' ',
      "greet, object, 'hi'",
      "bound('!');",
      "// => 'hi fred!'",
      ' ',
      '// Bound with placeholders.',
      "greet, object, _, '!'",
      "bound('hi');",
      "// => 'hi fred!'",
    ],
  },
  {
    text:
      "var object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n \nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n \nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n \nbound('!');\n// => 'hiya fred!'\n \n// Bound with placeholders.\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'",
    parsed: [
      'var object = {',
      "  'user': 'fred',",
      "  'greet': function(greeting, punctuation) {",
      "    return greeting + ' ' + this.user + punctuation;",
      '  }',
      '};',
      ' ',
      "object, 'greet', 'hi'",
      "bound('!');",
      "// => 'hi fred!'",
      ' ',
      'object.greet = function(greeting, punctuation) {',
      "  return greeting + 'ya ' + this.user + punctuation;",
      '};',
      ' ',
      "bound('!');",
      "// => 'hiya fred!'",
      ' ',
      '// Bound with placeholders.',
      "object, 'greet', _, '!'",
      "bound('hi');",
      "// => 'hiya fred!'",
    ],
  },
  {
    text:
      'var abc = function(a, b, c) {\n  return [a, b, c];\n};\n \nvar curried = _.curry(abc);\n \ncurried(1)(2)(3);\n// => [1, 2, 3]\n \ncurried(1, 2)(3);\n// => [1, 2, 3]\n \ncurried(1, 2, 3);\n// => [1, 2, 3]\n \n// Curried with placeholders.\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]',
    parsed: [
      'var abc = function(a, b, c) {',
      '  return [a, b, c];',
      '};',
      ' ',
      'abc',
      ' ',
      'curried(1)(2)(3);',
      '// => [1, 2, 3]',
      ' ',
      'curried(1, 2)(3);',
      '// => [1, 2, 3]',
      ' ',
      'curried(1, 2, 3);',
      '// => [1, 2, 3]',
      ' ',
      '// Curried with placeholders.',
      'curried(1)(_, 3)(2);',
      '// => [1, 2, 3]',
    ],
  },
  {
    text:
      'var abc = function(a, b, c) {\n  return [a, b, c];\n};\n \nvar curried = _.curryRight(abc);\n \ncurried(3)(2)(1);\n// => [1, 2, 3]\n \ncurried(2, 3)(1);\n// => [1, 2, 3]\n \ncurried(1, 2, 3);\n// => [1, 2, 3]\n \n// Curried with placeholders.\ncurried(3)(1, _)(2);\n// => [1, 2, 3]',
    parsed: [
      'var abc = function(a, b, c) {',
      '  return [a, b, c];',
      '};',
      ' ',
      'abc',
      ' ',
      'curried(3)(2)(1);',
      '// => [1, 2, 3]',
      ' ',
      'curried(2, 3)(1);',
      '// => [1, 2, 3]',
      ' ',
      'curried(1, 2, 3);',
      '// => [1, 2, 3]',
      ' ',
      '// Curried with placeholders.',
      'curried(3)(1, _)(2);',
      '// => [1, 2, 3]',
    ],
  },
  {
    text:
      "// Avoid costly calculations while the window size is in flux.\njQuery(window).on('resize', _.debounce(calculateLayout, 150));\n \n// Invoke `sendMail` when clicked, debouncing subsequent calls.\njQuery(element).on('click', _.debounce(sendMail, 300, {\n  'leading': true,\n  'trailing': false\n}));\n \n// Ensure `batchLog` is invoked once after 1 second of debounced calls.\nvar debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\nvar source = new EventSource('/stream');\njQuery(source).on('message', debounced);\n \n// Cancel the trailing debounced invocation.\njQuery(window).on('popstate', debounced.cancel);",
    parsed: [
      '// Avoid costly calculations while the window size is in flux.',
      'calculateLayout, 150)',
      ' ',
      '// Invoke `sendMail` when clicked, debouncing subsequent calls.',
      "jQuery(element).on('click', _.debounce(sendMail, 300, {",
      "  'leading': true,",
      "  'trailing': false",
      '}));',
      ' ',
      '// Ensure `batchLog` is invoked once after 1 second of debounced calls.',
      "batchLog, 250, { 'maxWait': 1000 }",
      "var source = new EventSource('/stream');",
      "jQuery(source).on('message', debounced);",
      ' ',
      '// Cancel the trailing debounced invocation.',
      "jQuery(window).on('popstate', debounced.cancel);",
    ],
  },
  {
    text:
      "_.defer(function(text) {\n  console.log(text);\n}, 'deferred');\n// => Logs 'deferred' after one millisecond.",
    parsed: [
      'function(text',
      '  console.log(text);',
      "}, 'deferred');",
      "// => Logs 'deferred' after one millisecond.",
    ],
  },
  {
    text:
      "_.delay(function(text) {\n  console.log(text);\n}, 1000, 'later');\n// => Logs 'later' after one second.",
    parsed: [
      'function(text',
      '  console.log(text);',
      "}, 1000, 'later');",
      "// => Logs 'later' after one second.",
    ],
  },
  {
    text:
      "var flipped = _.flip(function() {\n  return _.toArray(arguments);\n});\n \nflipped('a', 'b', 'c', 'd');\n// => ['d', 'c', 'b', 'a']",
    parsed: [
      'function(',
      'arguments',
      '});',
      ' ',
      "flipped('a', 'b', 'c', 'd');",
      "// => ['d', 'c', 'b', 'a']",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': 2 };\nvar other = { 'c': 3, 'd': 4 };\n \nvar values = _.memoize(_.values);\nvalues(object);\n// => [1, 2]\n \nvalues(other);\n// => [3, 4]\n \nobject.a = 2;\nvalues(object);\n// => [1, 2]\n \n// Modify the result cache.\nvalues.cache.set(object, ['a', 'b']);\nvalues(object);\n// => ['a', 'b']\n \n// Replace `_.memoize.Cache`.\n_.memoize.Cache = WeakMap;",
    parsed: [
      "var object = { 'a': 1, 'b': 2 };",
      "var other = { 'c': 3, 'd': 4 };",
      ' ',
      '_.values',
      'values(object);',
      '// => [1, 2]',
      ' ',
      'values(other);',
      '// => [3, 4]',
      ' ',
      'object.a = 2;',
      'values(object);',
      '// => [1, 2]',
      ' ',
      '// Modify the result cache.',
      "values.cache.set(object, ['a', 'b']);",
      'values(object);',
      "// => ['a', 'b']",
      ' ',
      '// Replace `_.memoize.Cache`.',
      '_.memoize.Cache = WeakMap;',
    ],
  },
  {
    text:
      'function isEven(n) {\n  return n % 2 == 0;\n}\n \n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]',
    parsed: [
      'function isEven(n) {',
      '  return n % 2 == 0;',
      '}',
      ' ',
      '[1, 2, 3, 4, 5, 6], _.negate(isEven)',
      '// => [1, 3, 5]',
    ],
  },
  {
    text:
      'var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once',
    parsed: [
      'createApplication',
      'initialize();',
      'initialize();',
      '// => `createApplication` is invoked once',
    ],
  },
  {
    text:
      'function doubled(n) {\n  return n * 2;\n}\n \nfunction square(n) {\n  return n * n;\n}\n \nvar func = _.overArgs(function(x, y) {\n  return [x, y];\n}, [square, doubled]);\n \nfunc(9, 3);\n// => [81, 6]\n \nfunc(10, 5);\n// => [100, 10]',
    parsed: [
      'function doubled(n) {',
      '  return n * 2;',
      '}',
      ' ',
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      'function(x, y',
      '  return [x, y];',
      '}, [square, doubled]);',
      ' ',
      'func(9, 3);',
      '// => [81, 6]',
      ' ',
      'func(10, 5);',
      '// => [100, 10]',
    ],
  },
  {
    text:
      "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n \nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n \n// Partially applied with placeholders.\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'",
    parsed: [
      'function greet(greeting, name) {',
      "  return greeting + ' ' + name;",
      '}',
      ' ',
      "greet, 'hello'",
      "sayHelloTo('fred');",
      "// => 'hello fred'",
      ' ',
      '// Partially applied with placeholders.',
      "greet, _, 'fred'",
      "greetFred('hi');",
      "// => 'hi fred'",
    ],
  },
  {
    text:
      "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n \nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n \n// Partially applied with placeholders.\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'",
    parsed: [
      'function greet(greeting, name) {',
      "  return greeting + ' ' + name;",
      '}',
      ' ',
      "greet, 'fred'",
      "greetFred('hi');",
      "// => 'hi fred'",
      ' ',
      '// Partially applied with placeholders.',
      "greet, 'hello', _",
      "sayHelloTo('fred');",
      "// => 'hello fred'",
    ],
  },
  {
    text:
      "var rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, [2, 0, 1]);\n \nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']",
    parsed: [
      'function(a, b, c',
      '  return [a, b, c];',
      '}, [2, 0, 1]);',
      ' ',
      "rearged('b', 'c', 'a')",
      "// => ['a', 'b', 'c']",
    ],
  },
  {
    text:
      "var say = _.rest(function(what, names) {\n  return what + ' ' + _.initial(names).join(', ') +\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n});\n \nsay('hello', 'fred', 'barney', 'pebbles');\n// => 'hello fred, barney, & pebbles'",
    parsed: [
      'function(what, names',
      "names).join(', '",
      "names) > 1 ? ', & ' : '') + _.last(names",
      '});',
      ' ',
      "say('hello', 'fred', 'barney', 'pebbles');",
      "// => 'hello fred, barney, & pebbles'",
    ],
  },
  {
    text:
      "var say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n \nsay(['fred', 'hello']);\n// => 'fred says hello'\n \nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n \nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76",
    parsed: [
      'function(who, what',
      "  return who + ' says ' + what;",
      '});',
      ' ',
      "say(['fred', 'hello']);",
      "// => 'fred says hello'",
      ' ',
      'var numbers = Promise.all([',
      '  Promise.resolve(40),',
      '  Promise.resolve(36)',
      ']);',
      ' ',
      'function(x, y',
      '  return x + y;',
      '}));',
      '// => a Promise of 76',
    ],
  },
  {
    text:
      "// Avoid excessively updating the position while scrolling.\njQuery(window).on('scroll', _.throttle(updatePosition, 100));\n \n// Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\nvar throttled = _.throttle(renewToken, 300000, { 'trailing': false });\njQuery(element).on('click', throttled);\n \n// Cancel the trailing throttled invocation.\njQuery(window).on('popstate', throttled.cancel);",
    parsed: [
      '// Avoid excessively updating the position while scrolling.',
      'updatePosition, 100)',
      ' ',
      '// Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.',
      "renewToken, 300000, { 'trailing': false }",
      "jQuery(element).on('click', throttled);",
      ' ',
      '// Cancel the trailing throttled invocation.',
      "jQuery(window).on('popstate', throttled.cancel);",
    ],
  },
  {
    text: "_.map(['6', '8', '10'], _.unary(parseInt));\n// => [6, 8, 10]",
    parsed: ["['6', '8', '10'], _.unary(parseInt)", '// => [6, 8, 10]'],
  },
  {
    text:
      "var p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n \np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'",
    parsed: [
      '_.escape, function(func, text',
      "  return '<p>' + func(text) + '</p>';",
      '});',
      ' ',
      "p('fred, barney, & pebbles');",
      "// => '<p>fred, barney, &amp; pebbles</p>'",
    ],
  },
  {
    text:
      "_.castArray(1);\n// => [1]\n \n_.castArray({ 'a': 1 });\n// => [{ 'a': 1 }]\n \n_.castArray('abc');\n// => ['abc']\n \n_.castArray(null);\n// => [null]\n \n_.castArray(undefined);\n// => [undefined]\n \n_.castArray();\n// => []\n \nvar array = [1, 2, 3];\nconsole.log(_.castArray(array) === array);\n// => true",
    parsed: [
      '1',
      '// => [1]',
      ' ',
      "{ 'a': 1 }",
      "// => [{ 'a': 1 }]",
      ' ',
      "'abc'",
      "// => ['abc']",
      ' ',
      'null',
      '// => [null]',
      ' ',
      'undefined',
      '// => [undefined]',
      ' ',
      '_.castArray();',
      '// => []',
      ' ',
      'var array = [1, 2, 3];',
      'array) === array',
      '// => true',
    ],
  },
  {
    text:
      "var objects = [{ 'a': 1 }, { 'b': 2 }];\n \nvar shallow = _.clone(objects);\nconsole.log(shallow[0] === objects[0]);\n// => true",
    parsed: [
      "var objects = [{ 'a': 1 }, { 'b': 2 }];",
      ' ',
      'objects',
      'console.log(shallow[0] === objects[0]);',
      '// => true',
    ],
  },
  {
    text:
      "var objects = [{ 'a': 1 }, { 'b': 2 }];\n \nvar deep = _.cloneDeep(objects);\nconsole.log(deep[0] === objects[0]);\n// => false",
    parsed: [
      "var objects = [{ 'a': 1 }, { 'b': 2 }];",
      ' ',
      'objects',
      'console.log(deep[0] === objects[0]);',
      '// => false',
    ],
  },
  {
    text:
      "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n}\n \nvar el = _.cloneDeepWith(document.body, customizer);\n \nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 20",
    parsed: [
      'function customizer(value) {',
      'value)',
      '    return value.cloneNode(true);',
      '  }',
      '}',
      ' ',
      'document.body, customizer',
      ' ',
      'console.log(el === document.body);',
      '// => false',
      'console.log(el.nodeName);',
      "// => 'BODY'",
      'console.log(el.childNodes.length);',
      '// => 20',
    ],
  },
  {
    text:
      "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(false);\n  }\n}\n \nvar el = _.cloneWith(document.body, customizer);\n \nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 0",
    parsed: [
      'function customizer(value) {',
      'value)',
      '    return value.cloneNode(false);',
      '  }',
      '}',
      ' ',
      'document.body, customizer',
      ' ',
      'console.log(el === document.body);',
      '// => false',
      'console.log(el.nodeName);',
      "// => 'BODY'",
      'console.log(el.childNodes.length);',
      '// => 0',
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': 2 };\n \n_.conformsTo(object, { 'b': function(n) { return n > 1; } });\n// => true\n \n_.conformsTo(object, { 'b': function(n) { return n > 2; } });\n// => false",
    parsed: [
      "var object = { 'a': 1, 'b': 2 };",
      ' ',
      "object, { 'b': function(n) { return n > 1; } }",
      '// => true',
      ' ',
      "object, { 'b': function(n) { return n > 2; } }",
      '// => false',
    ],
  },
  {
    text:
      "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n \n_.eq(object, object);\n// => true\n \n_.eq(object, other);\n// => false\n \n_.eq('a', 'a');\n// => true\n \n_.eq('a', Object('a'));\n// => false\n \n_.eq(NaN, NaN);\n// => true",
    parsed: [
      "var object = { 'a': 1 };",
      "var other = { 'a': 1 };",
      ' ',
      'object, object',
      '// => true',
      ' ',
      'object, other',
      '// => false',
      ' ',
      "'a', 'a'",
      '// => true',
      ' ',
      "'a', Object('a')",
      '// => false',
      ' ',
      'NaN, NaN',
      '// => true',
    ],
  },
  {
    text:
      '_.gt(3, 1);\n// => true\n \n_.gt(3, 3);\n// => false\n \n_.gt(1, 3);\n// => false',
    parsed: [
      '3, 1',
      '// => true',
      ' ',
      '3, 3',
      '// => false',
      ' ',
      '1, 3',
      '// => false',
    ],
  },
  {
    text:
      '_.gte(3, 1);\n// => true\n \n_.gte(3, 3);\n// => true\n \n_.gte(1, 3);\n// => false',
    parsed: [
      '3, 1',
      '// => true',
      ' ',
      '3, 3',
      '// => true',
      ' ',
      '1, 3',
      '// => false',
    ],
  },
  {
    text:
      '_.isArguments(function() { return arguments; }());\n// => true\n \n_.isArguments([1, 2, 3]);\n// => false',
    parsed: [
      'function() { return arguments; }()',
      '// => true',
      ' ',
      '[1, 2, 3]',
      '// => false',
    ],
  },
  {
    text:
      "_.isArray([1, 2, 3]);\n// => true\n \n_.isArray(document.body.children);\n// => false\n \n_.isArray('abc');\n// => false\n \n_.isArray(_.noop);\n// => false",
    parsed: [
      '[1, 2, 3]',
      '// => true',
      ' ',
      'document.body.children',
      '// => false',
      ' ',
      "'abc'",
      '// => false',
      ' ',
      '_.noop',
      '// => false',
    ],
  },
  {
    text:
      '_.isArrayBuffer(new ArrayBuffer(2));\n// => true\n \n_.isArrayBuffer(new Array(2));\n// => false',
    parsed: [
      'new ArrayBuffer(2)',
      '// => true',
      ' ',
      'new Array(2)',
      '// => false',
    ],
  },
  {
    text:
      "_.isArrayLike([1, 2, 3]);\n// => true\n \n_.isArrayLike(document.body.children);\n// => true\n \n_.isArrayLike('abc');\n// => true\n \n_.isArrayLike(_.noop);\n// => false",
    parsed: [
      '[1, 2, 3]',
      '// => true',
      ' ',
      'document.body.children',
      '// => true',
      ' ',
      "'abc'",
      '// => true',
      ' ',
      '_.noop',
      '// => false',
    ],
  },
  {
    text:
      "_.isArrayLikeObject([1, 2, 3]);\n// => true\n \n_.isArrayLikeObject(document.body.children);\n// => true\n \n_.isArrayLikeObject('abc');\n// => false\n \n_.isArrayLikeObject(_.noop);\n// => false",
    parsed: [
      '[1, 2, 3]',
      '// => true',
      ' ',
      'document.body.children',
      '// => true',
      ' ',
      "'abc'",
      '// => false',
      ' ',
      '_.noop',
      '// => false',
    ],
  },
  {
    text: '_.isBoolean(false);\n// => true\n \n_.isBoolean(null);\n// => false',
    parsed: ['false', '// => true', ' ', 'null', '// => false'],
  },
  {
    text:
      '_.isBuffer(new Buffer(2));\n// => true\n \n_.isBuffer(new Uint8Array(2));\n// => false',
    parsed: [
      'new Buffer(2)',
      '// => true',
      ' ',
      'new Uint8Array(2)',
      '// => false',
    ],
  },
  {
    text:
      "_.isDate(new Date);\n// => true\n \n_.isDate('Mon April 23 2012');\n// => false",
    parsed: [
      'new Date',
      '// => true',
      ' ',
      "'Mon April 23 2012'",
      '// => false',
    ],
  },
  {
    text:
      "_.isElement(document.body);\n// => true\n \n_.isElement('<body>');\n// => false",
    parsed: ['document.body', '// => true', ' ', "'<body>'", '// => false'],
  },
  {
    text:
      "_.isEmpty(null);\n// => true\n \n_.isEmpty(true);\n// => true\n \n_.isEmpty(1);\n// => true\n \n_.isEmpty([1, 2, 3]);\n// => false\n \n_.isEmpty({ 'a': 1 });\n// => false",
    parsed: [
      'null',
      '// => true',
      ' ',
      'true',
      '// => true',
      ' ',
      '1',
      '// => true',
      ' ',
      '[1, 2, 3]',
      '// => false',
      ' ',
      "{ 'a': 1 }",
      '// => false',
    ],
  },
  {
    text:
      "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n \n_.isEqual(object, other);\n// => true\n \nobject === other;\n// => false",
    parsed: [
      "var object = { 'a': 1 };",
      "var other = { 'a': 1 };",
      ' ',
      'object, other',
      '// => true',
      ' ',
      'object === other;',
      '// => false',
    ],
  },
  {
    text:
      "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n \nfunction customizer(objValue, othValue) {\n  if (isGreeting(objValue) && isGreeting(othValue)) {\n    return true;\n  }\n}\n \nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n \n_.isEqualWith(array, other, customizer);\n// => true",
    parsed: [
      'function isGreeting(value) {',
      '  return /^h(?:i|ello)$/.test(value);',
      '}',
      ' ',
      'function customizer(objValue, othValue) {',
      '  if (isGreeting(objValue) && isGreeting(othValue)) {',
      '    return true;',
      '  }',
      '}',
      ' ',
      "var array = ['hello', 'goodbye'];",
      "var other = ['hi', 'goodbye'];",
      ' ',
      'array, other, customizer',
      '// => true',
    ],
  },
  {
    text:
      '_.isError(new Error);\n// => true\n \n_.isError(Error);\n// => false',
    parsed: ['new Error', '// => true', ' ', 'Error', '// => false'],
  },
  {
    text:
      "_.isFinite(3);\n// => true\n \n_.isFinite(Number.MIN_VALUE);\n// => true\n \n_.isFinite(Infinity);\n// => false\n \n_.isFinite('3');\n// => false",
    parsed: [
      '3',
      '// => true',
      ' ',
      'Number.MIN_VALUE',
      '// => true',
      ' ',
      'Infinity',
      '// => false',
      ' ',
      "'3'",
      '// => false',
    ],
  },
  {
    text: '_.isFunction(_);\n// => true\n \n_.isFunction(/abc/);\n// => false',
    parsed: ['_', '// => true', ' ', '/abc/', '// => false'],
  },
  {
    text:
      "_.isInteger(3);\n// => true\n \n_.isInteger(Number.MIN_VALUE);\n// => false\n \n_.isInteger(Infinity);\n// => false\n \n_.isInteger('3');\n// => false",
    parsed: [
      '3',
      '// => true',
      ' ',
      'Number.MIN_VALUE',
      '// => false',
      ' ',
      'Infinity',
      '// => false',
      ' ',
      "'3'",
      '// => false',
    ],
  },
  {
    text:
      "_.isLength(3);\n// => true\n \n_.isLength(Number.MIN_VALUE);\n// => false\n \n_.isLength(Infinity);\n// => false\n \n_.isLength('3');\n// => false",
    parsed: [
      '3',
      '// => true',
      ' ',
      'Number.MIN_VALUE',
      '// => false',
      ' ',
      'Infinity',
      '// => false',
      ' ',
      "'3'",
      '// => false',
    ],
  },
  {
    text:
      '_.isMap(new Map);\n// => true\n \n_.isMap(new WeakMap);\n// => false',
    parsed: ['new Map', '// => true', ' ', 'new WeakMap', '// => false'],
  },
  {
    text:
      "var object = { 'a': 1, 'b': 2 };\n \n_.isMatch(object, { 'b': 2 });\n// => true\n \n_.isMatch(object, { 'b': 1 });\n// => false",
    parsed: [
      "var object = { 'a': 1, 'b': 2 };",
      ' ',
      "object, { 'b': 2 }",
      '// => true',
      ' ',
      "object, { 'b': 1 }",
      '// => false',
    ],
  },
  {
    text:
      "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n \nfunction customizer(objValue, srcValue) {\n  if (isGreeting(objValue) && isGreeting(srcValue)) {\n    return true;\n  }\n}\n \nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n \n_.isMatchWith(object, source, customizer);\n// => true",
    parsed: [
      'function isGreeting(value) {',
      '  return /^h(?:i|ello)$/.test(value);',
      '}',
      ' ',
      'function customizer(objValue, srcValue) {',
      '  if (isGreeting(objValue) && isGreeting(srcValue)) {',
      '    return true;',
      '  }',
      '}',
      ' ',
      "var object = { 'greeting': 'hello' };",
      "var source = { 'greeting': 'hi' };",
      ' ',
      'object, source, customizer',
      '// => true',
    ],
  },
  {
    text:
      '_.isNaN(NaN);\n// => true\n \n_.isNaN(new Number(NaN));\n// => true\n \nisNaN(undefined);\n// => true\n \n_.isNaN(undefined);\n// => false',
    parsed: [
      'NaN',
      '// => true',
      ' ',
      'new Number(NaN)',
      '// => true',
      ' ',
      'isNaN(undefined);',
      '// => true',
      ' ',
      'undefined',
      '// => false',
    ],
  },
  {
    text:
      '_.isNative(Array.prototype.push);\n// => true\n \n_.isNative(_);\n// => false',
    parsed: ['Array.prototype.push', '// => true', ' ', '_', '// => false'],
  },
  {
    text:
      '_.isNil(null);\n// => true\n \n_.isNil(void 0);\n// => true\n \n_.isNil(NaN);\n// => false',
    parsed: [
      'null',
      '// => true',
      ' ',
      'void 0',
      '// => true',
      ' ',
      'NaN',
      '// => false',
    ],
  },
  {
    text: '_.isNull(null);\n// => true\n \n_.isNull(void 0);\n// => false',
    parsed: ['null', '// => true', ' ', 'void 0', '// => false'],
  },
  {
    text:
      "_.isNumber(3);\n// => true\n \n_.isNumber(Number.MIN_VALUE);\n// => true\n \n_.isNumber(Infinity);\n// => true\n \n_.isNumber('3');\n// => false",
    parsed: [
      '3',
      '// => true',
      ' ',
      'Number.MIN_VALUE',
      '// => true',
      ' ',
      'Infinity',
      '// => true',
      ' ',
      "'3'",
      '// => false',
    ],
  },
  {
    text:
      '_.isObject({});\n// => true\n \n_.isObject([1, 2, 3]);\n// => true\n \n_.isObject(_.noop);\n// => true\n \n_.isObject(null);\n// => false',
    parsed: [
      '{}',
      '// => true',
      ' ',
      '[1, 2, 3]',
      '// => true',
      ' ',
      '_.noop',
      '// => true',
      ' ',
      'null',
      '// => false',
    ],
  },
  {
    text:
      '_.isObjectLike({});\n// => true\n \n_.isObjectLike([1, 2, 3]);\n// => true\n \n_.isObjectLike(_.noop);\n// => false\n \n_.isObjectLike(null);\n// => false',
    parsed: [
      '{}',
      '// => true',
      ' ',
      '[1, 2, 3]',
      '// => true',
      ' ',
      '_.noop',
      '// => false',
      ' ',
      'null',
      '// => false',
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n}\n \n_.isPlainObject(new Foo);\n// => false\n \n_.isPlainObject([1, 2, 3]);\n// => false\n \n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n \n_.isPlainObject(Object.create(null));\n// => true",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '}',
      ' ',
      'new Foo',
      '// => false',
      ' ',
      '[1, 2, 3]',
      '// => false',
      ' ',
      "{ 'x': 0, 'y': 0 }",
      '// => true',
      ' ',
      'Object.create(null)',
      '// => true',
    ],
  },
  {
    text:
      "_.isRegExp(/abc/);\n// => true\n \n_.isRegExp('/abc/');\n// => false",
    parsed: ['/abc/', '// => true', ' ', "'/abc/'", '// => false'],
  },
  {
    text:
      "_.isSafeInteger(3);\n// => true\n \n_.isSafeInteger(Number.MIN_VALUE);\n// => false\n \n_.isSafeInteger(Infinity);\n// => false\n \n_.isSafeInteger('3');\n// => false",
    parsed: [
      '3',
      '// => true',
      ' ',
      'Number.MIN_VALUE',
      '// => false',
      ' ',
      'Infinity',
      '// => false',
      ' ',
      "'3'",
      '// => false',
    ],
  },
  {
    text:
      '_.isSet(new Set);\n// => true\n \n_.isSet(new WeakSet);\n// => false',
    parsed: ['new Set', '// => true', ' ', 'new WeakSet', '// => false'],
  },
  {
    text: "_.isString('abc');\n// => true\n \n_.isString(1);\n// => false",
    parsed: ["'abc'", '// => true', ' ', '1', '// => false'],
  },
  {
    text:
      "_.isSymbol(Symbol.iterator);\n// => true\n \n_.isSymbol('abc');\n// => false",
    parsed: ['Symbol.iterator', '// => true', ' ', "'abc'", '// => false'],
  },
  {
    text:
      '_.isTypedArray(new Uint8Array);\n// => true\n \n_.isTypedArray([]);\n// => false',
    parsed: ['new Uint8Array', '// => true', ' ', '[]', '// => false'],
  },
  {
    text:
      '_.isUndefined(void 0);\n// => true\n \n_.isUndefined(null);\n// => false',
    parsed: ['void 0', '// => true', ' ', 'null', '// => false'],
  },
  {
    text:
      '_.isWeakMap(new WeakMap);\n// => true\n \n_.isWeakMap(new Map);\n// => false',
    parsed: ['new WeakMap', '// => true', ' ', 'new Map', '// => false'],
  },
  {
    text:
      '_.isWeakSet(new WeakSet);\n// => true\n \n_.isWeakSet(new Set);\n// => false',
    parsed: ['new WeakSet', '// => true', ' ', 'new Set', '// => false'],
  },
  {
    text:
      '_.lt(1, 3);\n// => true\n \n_.lt(3, 3);\n// => false\n \n_.lt(3, 1);\n// => false',
    parsed: [
      '1, 3',
      '// => true',
      ' ',
      '3, 3',
      '// => false',
      ' ',
      '3, 1',
      '// => false',
    ],
  },
  {
    text:
      '_.lte(1, 3);\n// => true\n \n_.lte(3, 3);\n// => true\n \n_.lte(3, 1);\n// => false',
    parsed: [
      '1, 3',
      '// => true',
      ' ',
      '3, 3',
      '// => true',
      ' ',
      '3, 1',
      '// => false',
    ],
  },
  {
    text:
      "_.toArray({ 'a': 1, 'b': 2 });\n// => [1, 2]\n \n_.toArray('abc');\n// => ['a', 'b', 'c']\n \n_.toArray(1);\n// => []\n \n_.toArray(null);\n// => []",
    parsed: [
      "{ 'a': 1, 'b': 2 }",
      '// => [1, 2]',
      ' ',
      "'abc'",
      "// => ['a', 'b', 'c']",
      ' ',
      '1',
      '// => []',
      ' ',
      'null',
      '// => []',
    ],
  },
  {
    text:
      "_.toFinite(3.2);\n// => 3.2\n \n_.toFinite(Number.MIN_VALUE);\n// => 5e-324\n \n_.toFinite(Infinity);\n// => 1.7976931348623157e+308\n \n_.toFinite('3.2');\n// => 3.2",
    parsed: [
      '3.2',
      '// => 3.2',
      ' ',
      'Number.MIN_VALUE',
      '// => 5e-324',
      ' ',
      'Infinity',
      '// => 1.7976931348623157e+308',
      ' ',
      "'3.2'",
      '// => 3.2',
    ],
  },
  {
    text:
      "_.toInteger(3.2);\n// => 3\n \n_.toInteger(Number.MIN_VALUE);\n// => 0\n \n_.toInteger(Infinity);\n// => 1.7976931348623157e+308\n \n_.toInteger('3.2');\n// => 3",
    parsed: [
      '3.2',
      '// => 3',
      ' ',
      'Number.MIN_VALUE',
      '// => 0',
      ' ',
      'Infinity',
      '// => 1.7976931348623157e+308',
      ' ',
      "'3.2'",
      '// => 3',
    ],
  },
  {
    text:
      "_.toLength(3.2);\n// => 3\n \n_.toLength(Number.MIN_VALUE);\n// => 0\n \n_.toLength(Infinity);\n// => 4294967295\n \n_.toLength('3.2');\n// => 3",
    parsed: [
      '3.2',
      '// => 3',
      ' ',
      'Number.MIN_VALUE',
      '// => 0',
      ' ',
      'Infinity',
      '// => 4294967295',
      ' ',
      "'3.2'",
      '// => 3',
    ],
  },
  {
    text:
      "_.toNumber(3.2);\n// => 3.2\n \n_.toNumber(Number.MIN_VALUE);\n// => 5e-324\n \n_.toNumber(Infinity);\n// => Infinity\n \n_.toNumber('3.2');\n// => 3.2",
    parsed: [
      '3.2',
      '// => 3.2',
      ' ',
      'Number.MIN_VALUE',
      '// => 5e-324',
      ' ',
      'Infinity',
      '// => Infinity',
      ' ',
      "'3.2'",
      '// => 3.2',
    ],
  },
  {
    text:
      "function Foo() {\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n \n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }",
    parsed: [
      'function Foo() {',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      "{ 'a': 1 }, new Foo",
      "// => { 'a': 1, 'b': 2 }",
      ' ',
      "{ 'a': 1 }, _.toPlainObject(new Foo)",
      "// => { 'a': 1, 'b': 2, 'c': 3 }",
    ],
  },
  {
    text:
      "_.toSafeInteger(3.2);\n// => 3\n \n_.toSafeInteger(Number.MIN_VALUE);\n// => 0\n \n_.toSafeInteger(Infinity);\n// => 9007199254740991\n \n_.toSafeInteger('3.2');\n// => 3",
    parsed: [
      '3.2',
      '// => 3',
      ' ',
      'Number.MIN_VALUE',
      '// => 0',
      ' ',
      'Infinity',
      '// => 9007199254740991',
      ' ',
      "'3.2'",
      '// => 3',
    ],
  },
  {
    text:
      "_.toString(null);\n// => ''\n \n_.toString(-0);\n// => '-0'\n \n_.toString([1, 2, 3]);\n// => '1,2,3'",
    parsed: [
      'null',
      "// => ''",
      ' ',
      '-0',
      "// => '-0'",
      ' ',
      '[1, 2, 3]',
      "// => '1,2,3'",
    ],
  },
  {
    text: '_.add(6, 4);\n// => 10',
    parsed: ['6, 4', '// => 10'],
  },
  {
    text:
      '_.ceil(4.006);\n// => 5\n \n_.ceil(6.004, 2);\n// => 6.01\n \n_.ceil(6040, -2);\n// => 6100',
    parsed: [
      '4.006',
      '// => 5',
      ' ',
      '6.004, 2',
      '// => 6.01',
      ' ',
      '6040, -2',
      '// => 6100',
    ],
  },
  {
    text: '_.divide(6, 4);\n// => 1.5',
    parsed: ['6, 4', '// => 1.5'],
  },
  {
    text:
      '_.floor(4.006);\n// => 4\n \n_.floor(0.046, 2);\n// => 0.04\n \n_.floor(4060, -2);\n// => 4000',
    parsed: [
      '4.006',
      '// => 4',
      ' ',
      '0.046, 2',
      '// => 0.04',
      ' ',
      '4060, -2',
      '// => 4000',
    ],
  },
  {
    text: '_.max([4, 2, 8, 6]);\n// => 8\n \n_.max([]);\n// => undefined',
    parsed: ['[4, 2, 8, 6]', '// => 8', ' ', '[]', '// => undefined'],
  },
  {
    text:
      "var objects = [{ 'n': 1 }, { 'n': 2 }];\n \n_.maxBy(objects, function(o) { return o.n; });\n// => { 'n': 2 }\n \n// The `_.property` iteratee shorthand.\n_.maxBy(objects, 'n');\n// => { 'n': 2 }",
    parsed: [
      "var objects = [{ 'n': 1 }, { 'n': 2 }];",
      ' ',
      'objects, function(o) { return o.n; }',
      "// => { 'n': 2 }",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, 'n'",
      "// => { 'n': 2 }",
    ],
  },
  {
    text: '_.mean([4, 2, 8, 6]);\n// => 5',
    parsed: ['[4, 2, 8, 6]', '// => 5'],
  },
  {
    text:
      "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n \n_.meanBy(objects, function(o) { return o.n; });\n// => 5\n \n// The `_.property` iteratee shorthand.\n_.meanBy(objects, 'n');\n// => 5",
    parsed: [
      "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];",
      ' ',
      'objects, function(o) { return o.n; }',
      '// => 5',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, 'n'",
      '// => 5',
    ],
  },
  {
    text: '_.min([4, 2, 8, 6]);\n// => 2\n \n_.min([]);\n// => undefined',
    parsed: ['[4, 2, 8, 6]', '// => 2', ' ', '[]', '// => undefined'],
  },
  {
    text:
      "var objects = [{ 'n': 1 }, { 'n': 2 }];\n \n_.minBy(objects, function(o) { return o.n; });\n// => { 'n': 1 }\n \n// The `_.property` iteratee shorthand.\n_.minBy(objects, 'n');\n// => { 'n': 1 }",
    parsed: [
      "var objects = [{ 'n': 1 }, { 'n': 2 }];",
      ' ',
      'objects, function(o) { return o.n; }',
      "// => { 'n': 1 }",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, 'n'",
      "// => { 'n': 1 }",
    ],
  },
  {
    text: '_.multiply(6, 4);\n// => 24',
    parsed: ['6, 4', '// => 24'],
  },
  {
    text:
      '_.round(4.006);\n// => 4\n \n_.round(4.006, 2);\n// => 4.01\n \n_.round(4060, -2);\n// => 4100',
    parsed: [
      '4.006',
      '// => 4',
      ' ',
      '4.006, 2',
      '// => 4.01',
      ' ',
      '4060, -2',
      '// => 4100',
    ],
  },
  {
    text: '_.subtract(6, 4);\n// => 2',
    parsed: ['6, 4', '// => 2'],
  },
  {
    text: '_.sum([4, 2, 8, 6]);\n// => 20',
    parsed: ['[4, 2, 8, 6]', '// => 20'],
  },
  {
    text:
      "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n \n_.sumBy(objects, function(o) { return o.n; });\n// => 20\n \n// The `_.property` iteratee shorthand.\n_.sumBy(objects, 'n');\n// => 20",
    parsed: [
      "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];",
      ' ',
      'objects, function(o) { return o.n; }',
      '// => 20',
      ' ',
      '// The `_.property` iteratee shorthand.',
      "objects, 'n'",
      '// => 20',
    ],
  },
  {
    text: '_.clamp(-10, -5, 5);\n// => -5\n \n_.clamp(10, -5, 5);\n// => 5',
    parsed: ['-10, -5, 5', '// => -5', ' ', '10, -5, 5', '// => 5'],
  },
  {
    text:
      '_.inRange(3, 2, 4);\n// => true\n \n_.inRange(4, 8);\n// => true\n \n_.inRange(4, 2);\n// => false\n \n_.inRange(2, 2);\n// => false\n \n_.inRange(1.2, 2);\n// => true\n \n_.inRange(5.2, 4);\n// => false\n \n_.inRange(-3, -2, -6);\n// => true',
    parsed: [
      '3, 2, 4',
      '// => true',
      ' ',
      '4, 8',
      '// => true',
      ' ',
      '4, 2',
      '// => false',
      ' ',
      '2, 2',
      '// => false',
      ' ',
      '1.2, 2',
      '// => true',
      ' ',
      '5.2, 4',
      '// => false',
      ' ',
      '-3, -2, -6',
      '// => true',
    ],
  },
  {
    text:
      '_.random(0, 5);\n// => an integer between 0 and 5\n \n_.random(5);\n// => also an integer between 0 and 5\n \n_.random(5, true);\n// => a floating-point number between 0 and 5\n \n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2',
    parsed: [
      '0, 5',
      '// => an integer between 0 and 5',
      ' ',
      '5',
      '// => also an integer between 0 and 5',
      ' ',
      '5, true',
      '// => a floating-point number between 0 and 5',
      ' ',
      '1.2, 5.2',
      '// => a floating-point number between 1.2 and 5.2',
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n}\n \nfunction Bar() {\n  this.c = 3;\n}\n \nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n \n_.assign({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'c': 3 }",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '}',
      ' ',
      'function Bar() {',
      '  this.c = 3;',
      '}',
      ' ',
      'Foo.prototype.b = 2;',
      'Bar.prototype.d = 4;',
      ' ',
      "{ 'a': 0 }, new Foo, new Bar",
      "// => { 'a': 1, 'c': 3 }",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n}\n \nfunction Bar() {\n  this.c = 3;\n}\n \nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n \n_.assignIn({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '}',
      ' ',
      'function Bar() {',
      '  this.c = 3;',
      '}',
      ' ',
      'Foo.prototype.b = 2;',
      'Bar.prototype.d = 4;',
      ' ',
      "{ 'a': 0 }, new Foo, new Bar",
      "// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }",
    ],
  },
  {
    text:
      "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n \nvar defaults = _.partialRight(_.assignInWith, customizer);\n \ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }",
    parsed: [
      'function customizer(objValue, srcValue) {',
      'objValue',
      '}',
      ' ',
      '_.assignInWith, customizer',
      ' ',
      "defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });",
      "// => { 'a': 1, 'b': 2 }",
    ],
  },
  {
    text:
      "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n \nvar defaults = _.partialRight(_.assignWith, customizer);\n \ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }",
    parsed: [
      'function customizer(objValue, srcValue) {',
      'objValue',
      '}',
      ' ',
      '_.assignWith, customizer',
      ' ',
      "defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });",
      "// => { 'a': 1, 'b': 2 }",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n \n_.at(object, ['a[0].b.c', 'a[1]']);\n// => [3, 4]",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };",
      ' ',
      "object, ['a[0].b.c', 'a[1]']",
      '// => [3, 4]',
    ],
  },
  {
    text:
      "function Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n \nfunction Circle() {\n  Shape.call(this);\n}\n \nCircle.prototype = _.create(Shape.prototype, {\n  'constructor': Circle\n});\n \nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n \ncircle instanceof Shape;\n// => true",
    parsed: [
      'function Shape() {',
      '  this.x = 0;',
      '  this.y = 0;',
      '}',
      ' ',
      'function Circle() {',
      '  Shape.call(this);',
      '}',
      ' ',
      'Circle.prototype = _.create(Shape.prototype, {',
      "  'constructor': Circle",
      '});',
      ' ',
      'var circle = new Circle;',
      'circle instanceof Circle;',
      '// => true',
      ' ',
      'circle instanceof Shape;',
      '// => true',
    ],
  },
  {
    text:
      "_.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }",
    parsed: ["{ 'a': 1 }, { 'b': 2 }, { 'a': 3 }", "// => { 'a': 1, 'b': 2 }"],
  },
  {
    text:
      "_.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n// => { 'a': { 'b': 2, 'c': 3 } }",
    parsed: [
      "{ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } }",
      "// => { 'a': { 'b': 2, 'c': 3 } }",
    ],
  },
  {
    text:
      "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n \n_.findKey(users, function(o) { return o.age < 40; });\n// => 'barney' (iteration order is not guaranteed)\n \n// The `_.matches` iteratee shorthand.\n_.findKey(users, { 'age': 1, 'active': true });\n// => 'pebbles'\n \n// The `_.matchesProperty` iteratee shorthand.\n_.findKey(users, ['active', false]);\n// => 'fred'\n \n// The `_.property` iteratee shorthand.\n_.findKey(users, 'active');\n// => 'barney'",
    parsed: [
      'var users = {',
      "  'barney':  { 'age': 36, 'active': true },",
      "  'fred':    { 'age': 40, 'active': false },",
      "  'pebbles': { 'age': 1,  'active': true }",
      '};',
      ' ',
      'users, function(o) { return o.age < 40; }',
      "// => 'barney' (iteration order is not guaranteed)",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 1, 'active': true }",
      "// => 'pebbles'",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => 'fred'",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => 'barney'",
    ],
  },
  {
    text:
      "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n \n_.findLastKey(users, function(o) { return o.age < 40; });\n// => returns 'pebbles' assuming `_.findKey` returns 'barney'\n \n// The `_.matches` iteratee shorthand.\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n \n// The `_.matchesProperty` iteratee shorthand.\n_.findLastKey(users, ['active', false]);\n// => 'fred'\n \n// The `_.property` iteratee shorthand.\n_.findLastKey(users, 'active');\n// => 'pebbles'",
    parsed: [
      'var users = {',
      "  'barney':  { 'age': 36, 'active': true },",
      "  'fred':    { 'age': 40, 'active': false },",
      "  'pebbles': { 'age': 1,  'active': true }",
      '};',
      ' ',
      'users, function(o) { return o.age < 40; }',
      "// => returns 'pebbles' assuming `_.findKey` returns 'barney'",
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, { 'age': 36, 'active': true }",
      "// => 'barney'",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, ['active', false]",
      "// => 'fred'",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'active'",
      "// => 'pebbles'",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo, function(value, key',
      '  console.log(key);',
      '});',
      "// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo, function(value, key',
      '  console.log(key);',
      '});',
      "// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.forOwn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo, function(value, key',
      '  console.log(key);',
      '});',
      "// => Logs 'a' then 'b' (iteration order is not guaranteed).",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.forOwnRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo, function(value, key',
      '  console.log(key);',
      '});',
      "// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n \nFoo.prototype.c = _.constant('c');\n \n_.functions(new Foo);\n// => ['a', 'b']",
    parsed: [
      'function Foo() {',
      "'a'",
      "'b'",
      '}',
      ' ',
      "'c'",
      ' ',
      'new Foo',
      "// => ['a', 'b']",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n \nFoo.prototype.c = _.constant('c');\n \n_.functionsIn(new Foo);\n// => ['a', 'b', 'c']",
    parsed: [
      'function Foo() {',
      "'a'",
      "'b'",
      '}',
      ' ',
      "'c'",
      ' ',
      'new Foo',
      "// => ['a', 'b', 'c']",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n \n_.get(object, 'a[0].b.c');\n// => 3\n \n_.get(object, ['a', '0', 'b', 'c']);\n// => 3\n \n_.get(object, 'a.b.c', 'default');\n// => 'default'",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };",
      ' ',
      "object, 'a[0].b.c'",
      '// => 3',
      ' ',
      "object, ['a', '0', 'b', 'c']",
      '// => 3',
      ' ',
      "object, 'a.b.c', 'default'",
      "// => 'default'",
    ],
  },
  {
    text:
      "var object = { 'a': { 'b': 2 } };\nvar other = _.create({ 'a': _.create({ 'b': 2 }) });\n \n_.has(object, 'a');\n// => true\n \n_.has(object, 'a.b');\n// => true\n \n_.has(object, ['a', 'b']);\n// => true\n \n_.has(other, 'a');\n// => false",
    parsed: [
      "var object = { 'a': { 'b': 2 } };",
      "{ 'a': _.create({ 'b': 2 }) }",
      ' ',
      "object, 'a'",
      '// => true',
      ' ',
      "object, 'a.b'",
      '// => true',
      ' ',
      "object, ['a', 'b']",
      '// => true',
      ' ',
      "other, 'a'",
      '// => false',
    ],
  },
  {
    text:
      "var object = _.create({ 'a': _.create({ 'b': 2 }) });\n \n_.hasIn(object, 'a');\n// => true\n \n_.hasIn(object, 'a.b');\n// => true\n \n_.hasIn(object, ['a', 'b']);\n// => true\n \n_.hasIn(object, 'b');\n// => false",
    parsed: [
      "{ 'a': _.create({ 'b': 2 }) }",
      ' ',
      "object, 'a'",
      '// => true',
      ' ',
      "object, 'a.b'",
      '// => true',
      ' ',
      "object, ['a', 'b']",
      '// => true',
      ' ',
      "object, 'b'",
      '// => false',
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': 2, 'c': 1 };\n \n_.invert(object);\n// => { '1': 'c', '2': 'b' }",
    parsed: [
      "var object = { 'a': 1, 'b': 2, 'c': 1 };",
      ' ',
      'object',
      "// => { '1': 'c', '2': 'b' }",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': 2, 'c': 1 };\n \n_.invertBy(object);\n// => { '1': ['a', 'c'], '2': ['b'] }\n \n_.invertBy(object, function(value) {\n  return 'group' + value;\n});\n// => { 'group1': ['a', 'c'], 'group2': ['b'] }",
    parsed: [
      "var object = { 'a': 1, 'b': 2, 'c': 1 };",
      ' ',
      'object',
      "// => { '1': ['a', 'c'], '2': ['b'] }",
      ' ',
      'object, function(value',
      "  return 'group' + value;",
      '});',
      "// => { 'group1': ['a', 'c'], 'group2': ['b'] }",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n \n_.invoke(object, 'a[0].b.c.slice', 1, 3);\n// => [2, 3]",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };",
      ' ',
      "object, 'a[0].b.c.slice', 1, 3",
      '// => [2, 3]',
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n \n_.keys('hi');\n// => ['0', '1']",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      "// => ['a', 'b'] (iteration order is not guaranteed)",
      ' ',
      "'hi'",
      "// => ['0', '1']",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      "// => ['a', 'b', 'c'] (iteration order is not guaranteed)",
    ],
  },
  {
    text:
      "_.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n  return key + value;\n});\n// => { 'a1': 1, 'b2': 2 }",
    parsed: [
      "{ 'a': 1, 'b': 2 }, function(value, key",
      '  return key + value;',
      '});',
      "// => { 'a1': 1, 'b2': 2 }",
    ],
  },
  {
    text:
      "var users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n \n_.mapValues(users, function(o) { return o.age; });\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n \n// The `_.property` iteratee shorthand.\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)",
    parsed: [
      'var users = {',
      "  'fred':    { 'user': 'fred',    'age': 40 },",
      "  'pebbles': { 'user': 'pebbles', 'age': 1 }",
      '};',
      ' ',
      'users, function(o) { return o.age; }',
      "// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, 'age'",
      "// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)",
    ],
  },
  {
    text:
      "var object = {\n  'a': [{ 'b': 2 }, { 'd': 4 }]\n};\n \nvar other = {\n  'a': [{ 'c': 3 }, { 'e': 5 }]\n};\n \n_.merge(object, other);\n// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }",
    parsed: [
      'var object = {',
      "  'a': [{ 'b': 2 }, { 'd': 4 }]",
      '};',
      ' ',
      'var other = {',
      "  'a': [{ 'c': 3 }, { 'e': 5 }]",
      '};',
      ' ',
      'object, other',
      "// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }",
    ],
  },
  {
    text:
      "function customizer(objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n}\n \nvar object = { 'a': [1], 'b': [2] };\nvar other = { 'a': [3], 'b': [4] };\n \n_.mergeWith(object, other, customizer);\n// => { 'a': [1, 3], 'b': [2, 4] }",
    parsed: [
      'function customizer(objValue, srcValue) {',
      'objValue)',
      '    return objValue.concat(srcValue);',
      '  }',
      '}',
      ' ',
      "var object = { 'a': [1], 'b': [2] };",
      "var other = { 'a': [3], 'b': [4] };",
      ' ',
      'object, other, customizer',
      "// => { 'a': [1, 3], 'b': [2, 4] }",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': '2', 'c': 3 };\n \n_.omit(object, ['a', 'c']);\n// => { 'b': '2' }",
    parsed: [
      "var object = { 'a': 1, 'b': '2', 'c': 3 };",
      ' ',
      "object, ['a', 'c']",
      "// => { 'b': '2' }",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': '2', 'c': 3 };\n \n_.omitBy(object, _.isNumber);\n// => { 'b': '2' }",
    parsed: [
      "var object = { 'a': 1, 'b': '2', 'c': 3 };",
      ' ',
      'object, _.isNumber',
      "// => { 'b': '2' }",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': '2', 'c': 3 };\n \n_.pick(object, ['a', 'c']);\n// => { 'a': 1, 'c': 3 }",
    parsed: [
      "var object = { 'a': 1, 'b': '2', 'c': 3 };",
      ' ',
      "object, ['a', 'c']",
      "// => { 'a': 1, 'c': 3 }",
    ],
  },
  {
    text:
      "var object = { 'a': 1, 'b': '2', 'c': 3 };\n \n_.pickBy(object, _.isNumber);\n// => { 'a': 1, 'c': 3 }",
    parsed: [
      "var object = { 'a': 1, 'b': '2', 'c': 3 };",
      ' ',
      'object, _.isNumber',
      "// => { 'a': 1, 'c': 3 }",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n \n_.result(object, 'a[0].b.c1');\n// => 3\n \n_.result(object, 'a[0].b.c2');\n// => 4\n \n_.result(object, 'a[0].b.c3', 'default');\n// => 'default'\n \n_.result(object, 'a[0].b.c3', _.constant('default'));\n// => 'default'",
    parsed: [
      '4',
      ' ',
      "object, 'a[0].b.c1'",
      '// => 3',
      ' ',
      "object, 'a[0].b.c2'",
      '// => 4',
      ' ',
      "object, 'a[0].b.c3', 'default'",
      "// => 'default'",
      ' ',
      "object, 'a[0].b.c3', _.constant('default')",
      "// => 'default'",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n \n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n \n_.set(object, ['x', '0', 'y', 'z'], 5);\nconsole.log(object.x[0].y.z);\n// => 5",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };",
      ' ',
      "object, 'a[0].b.c', 4",
      'console.log(object.a[0].b.c);',
      '// => 4',
      ' ',
      "object, ['x', '0', 'y', 'z'], 5",
      'console.log(object.x[0].y.z);',
      '// => 5',
    ],
  },
  {
    text:
      "var object = {};\n \n_.setWith(object, '[0][1]', 'a', Object);\n// => { '0': { '1': 'a' } }",
    parsed: [
      'var object = {};',
      ' ',
      "object, '[0][1]', 'a', Object",
      "// => { '0': { '1': 'a' } }",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.toPairs(new Foo);\n// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      "// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.toPairsIn(new Foo);\n// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      "// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)",
    ],
  },
  {
    text:
      "_.transform([2, 3, 4], function(result, n) {\n  result.push(n *= n);\n  return n % 2 == 0;\n}, []);\n// => [4, 9]\n \n_.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] }",
    parsed: [
      '[2, 3, 4], function(result, n',
      '  result.push(n *= n);',
      '  return n % 2 == 0;',
      '}, []);',
      '// => [4, 9]',
      ' ',
      "{ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key",
      '  (result[value] || (result[value] = [])).push(key);',
      '}, {});',
      "// => { '1': ['a', 'c'], '2': ['b'] }",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 7 } }] };\n_.unset(object, 'a[0].b.c');\n// => true\n \nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n \n_.unset(object, ['a', '0', 'b', 'c']);\n// => true\n \nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 7 } }] };",
      "object, 'a[0].b.c'",
      '// => true',
      ' ',
      'console.log(object);',
      "// => { 'a': [{ 'b': {} }] };",
      ' ',
      "object, ['a', '0', 'b', 'c']",
      '// => true',
      ' ',
      'console.log(object);',
      "// => { 'a': [{ 'b': {} }] };",
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n \n_.update(object, 'a[0].b.c', function(n) { return n * n; });\nconsole.log(object.a[0].b.c);\n// => 9\n \n_.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\nconsole.log(object.x[0].y.z);\n// => 0",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 3 } }] };",
      ' ',
      "object, 'a[0].b.c', function(n) { return n * n; }",
      'console.log(object.a[0].b.c);',
      '// => 9',
      ' ',
      "object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; }",
      'console.log(object.x[0].y.z);',
      '// => 0',
    ],
  },
  {
    text:
      "var object = {};\n \n_.updateWith(object, '[0][1]', _.constant('a'), Object);\n// => { '0': { '1': 'a' } }",
    parsed: [
      'var object = {};',
      ' ',
      "object, '[0][1]', _.constant('a'), Object",
      "// => { '0': { '1': 'a' } }",
    ],
  },
  {
    text:
      "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n \n_.values('hi');\n// => ['h', 'i']",
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      '// => [1, 2] (iteration order is not guaranteed)',
      ' ',
      "'hi'",
      "// => ['h', 'i']",
    ],
  },
  {
    text:
      'function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n \nFoo.prototype.c = 3;\n \n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)',
    parsed: [
      'function Foo() {',
      '  this.a = 1;',
      '  this.b = 2;',
      '}',
      ' ',
      'Foo.prototype.c = 3;',
      ' ',
      'new Foo',
      '// => [1, 2, 3] (iteration order is not guaranteed)',
    ],
  },
  {
    text:
      'function square(n) {\n  return n * n;\n}\n \nvar wrapped = _([1, 2, 3]);\n \n// Returns an unwrapped value.\nwrapped.reduce(_.add);\n// => 6\n \n// Returns a wrapped value.\nvar squares = wrapped.map(square);\n \n_.isArray(squares);\n// => false\n \n_.isArray(squares.value());\n// => true',
    parsed: [
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      'var wrapped = _([1, 2, 3]);',
      ' ',
      '// Returns an unwrapped value.',
      'wrapped.reduce(_.add);',
      '// => 6',
      ' ',
      '// Returns a wrapped value.',
      'var squares = wrapped.map(square);',
      ' ',
      'squares',
      '// => false',
      ' ',
      'squares.value()',
      '// => true',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney',  'age': 36 },\n  { 'user': 'fred',    'age': 40 },\n  { 'user': 'pebbles', 'age': 1 }\n];\n \nvar youngest = _\n  .chain(users)\n  .sortBy('age')\n  .map(function(o) {\n    return o.user + ' is ' + o.age;\n  })\n  .head()\n  .value();\n// => 'pebbles is 1'",
    parsed: [
      'var users = [',
      "  { 'user': 'barney',  'age': 36 },",
      "  { 'user': 'fred',    'age': 40 },",
      "  { 'user': 'pebbles', 'age': 1 }",
      '];',
      ' ',
      'var youngest = _',
      '  .chain(users)',
      "  .sortBy('age')",
      '  .map(function(o) {',
      "    return o.user + ' is ' + o.age;",
      '  })',
      '  .head()',
      '  .value();',
      "// => 'pebbles is 1'",
    ],
  },
  {
    text:
      '_([1, 2, 3])\n .tap(function(array) {\n// Mutate input array.\n   array.pop();\n })\n .reverse()\n .value();\n// => [2, 1]',
    parsed: [
      '_([1, 2, 3])',
      ' .tap(function(array) {',
      '// Mutate input array.',
      '   array.pop();',
      ' })',
      ' .reverse()',
      ' .value();',
      '// => [2, 1]',
    ],
  },
  {
    text:
      "_('  abc  ')\n .chain()\n .trim()\n .thru(function(value) {\n   return [value];\n })\n .value();\n// => ['abc']",
    parsed: [
      "_('  abc  ')",
      ' .chain()',
      ' .trim()',
      ' .thru(function(value) {',
      '   return [value];',
      ' })',
      ' .value();',
      "// => ['abc']",
    ],
  },
  {
    text:
      'var wrapped = _([1, 2]);\n \nwrapped[Symbol.iterator]() === wrapped;\n// => true\n \nArray.from(wrapped);\n// => [1, 2]',
    parsed: [
      'var wrapped = _([1, 2]);',
      ' ',
      'wrapped[Symbol.iterator]() === wrapped;',
      '// => true',
      ' ',
      'Array.from(wrapped);',
      '// => [1, 2]',
    ],
  },
  {
    text:
      "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n \n_(object).at(['a[0].b.c', 'a[1]']).value();\n// => [3, 4]",
    parsed: [
      "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };",
      ' ',
      "_(object).at(['a[0].b.c', 'a[1]']).value();",
      '// => [3, 4]',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n \n// A sequence without explicit chaining.\n_(users).head();\n// => { 'user': 'barney', 'age': 36 }\n \n// A sequence with explicit chaining.\n_(users)\n  .chain()\n  .head()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }",
    parsed: [
      'var users = [',
      "  { 'user': 'barney', 'age': 36 },",
      "  { 'user': 'fred',   'age': 40 }",
      '];',
      ' ',
      '// A sequence without explicit chaining.',
      '_(users).head();',
      "// => { 'user': 'barney', 'age': 36 }",
      ' ',
      '// A sequence with explicit chaining.',
      '_(users)',
      '  .chain()',
      '  .head()',
      "  .pick('user')",
      '  .value();',
      "// => { 'user': 'barney' }",
    ],
  },
  {
    text:
      'var array = [1, 2];\nvar wrapped = _(array).push(3);\n \nconsole.log(array);\n// => [1, 2]\n \nwrapped = wrapped.commit();\nconsole.log(array);\n// => [1, 2, 3]\n \nwrapped.last();\n// => 3\n \nconsole.log(array);\n// => [1, 2, 3]',
    parsed: [
      'var array = [1, 2];',
      'var wrapped = _(array).push(3);',
      ' ',
      'console.log(array);',
      '// => [1, 2]',
      ' ',
      'wrapped = wrapped.commit();',
      'console.log(array);',
      '// => [1, 2, 3]',
      ' ',
      'wrapped.last();',
      '// => 3',
      ' ',
      'console.log(array);',
      '// => [1, 2, 3]',
    ],
  },
  {
    text:
      "var wrapped = _([1, 2]);\n \nwrapped.next();\n// => { 'done': false, 'value': 1 }\n \nwrapped.next();\n// => { 'done': false, 'value': 2 }\n \nwrapped.next();\n// => { 'done': true, 'value': undefined }",
    parsed: [
      'var wrapped = _([1, 2]);',
      ' ',
      'wrapped.next();',
      "// => { 'done': false, 'value': 1 }",
      ' ',
      'wrapped.next();',
      "// => { 'done': false, 'value': 2 }",
      ' ',
      'wrapped.next();',
      "// => { 'done': true, 'value': undefined }",
    ],
  },
  {
    text:
      'function square(n) {\n  return n * n;\n}\n \nvar wrapped = _([1, 2]).map(square);\nvar other = wrapped.plant([3, 4]);\n \nother.value();\n// => [9, 16]\n \nwrapped.value();\n// => [1, 4]',
    parsed: [
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      'var wrapped = _([1, 2]).map(square);',
      'var other = wrapped.plant([3, 4]);',
      ' ',
      'other.value();',
      '// => [9, 16]',
      ' ',
      'wrapped.value();',
      '// => [1, 4]',
    ],
  },
  {
    text:
      'var array = [1, 2, 3];\n \n_(array).reverse().value()\n// => [3, 2, 1]\n \nconsole.log(array);\n// => [3, 2, 1]',
    parsed: [
      'var array = [1, 2, 3];',
      ' ',
      '_(array).reverse().value()',
      '// => [3, 2, 1]',
      ' ',
      'console.log(array);',
      '// => [3, 2, 1]',
    ],
  },
  {
    text: '_([1, 2, 3]).value();\n// => [1, 2, 3]',
    parsed: ['_([1, 2, 3]).value();', '// => [1, 2, 3]'],
  },
  {
    text:
      "_.camelCase('Foo Bar');\n// => 'fooBar'\n \n_.camelCase('--foo-bar--');\n// => 'fooBar'\n \n_.camelCase('__FOO_BAR__');\n// => 'fooBar'",
    parsed: [
      "'Foo Bar'",
      "// => 'fooBar'",
      ' ',
      "'--foo-bar--'",
      "// => 'fooBar'",
      ' ',
      "'__FOO_BAR__'",
      "// => 'fooBar'",
    ],
  },
  {
    text: "_.capitalize('FRED');\n// => 'Fred'",
    parsed: ["'FRED'", "// => 'Fred'"],
  },
  {
    text: "_.deburr('déjà vu');\n// => 'deja vu'",
    parsed: ["'déjà vu'", "// => 'deja vu'"],
  },
  {
    text:
      "_.endsWith('abc', 'c');\n// => true\n \n_.endsWith('abc', 'b');\n// => false\n \n_.endsWith('abc', 'b', 2);\n// => true",
    parsed: [
      "'abc', 'c'",
      '// => true',
      ' ',
      "'abc', 'b'",
      '// => false',
      ' ',
      "'abc', 'b', 2",
      '// => true',
    ],
  },
  {
    text:
      "_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'",
    parsed: [
      "'fred, barney, & pebbles'",
      "// => 'fred, barney, &amp; pebbles'",
    ],
  },
  {
    text:
      "_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https://lodash\\.com/\\)'",
    parsed: [
      "'[lodash](https://lodash.com/)'",
      "// => '\\[lodash\\]\\(https://lodash\\.com/\\)'",
    ],
  },
  {
    text:
      "_.kebabCase('Foo Bar');\n// => 'foo-bar'\n \n_.kebabCase('fooBar');\n// => 'foo-bar'\n \n_.kebabCase('__FOO_BAR__');\n// => 'foo-bar'",
    parsed: [
      "'Foo Bar'",
      "// => 'foo-bar'",
      ' ',
      "'fooBar'",
      "// => 'foo-bar'",
      ' ',
      "'__FOO_BAR__'",
      "// => 'foo-bar'",
    ],
  },
  {
    text:
      "_.lowerCase('--Foo-Bar--');\n// => 'foo bar'\n \n_.lowerCase('fooBar');\n// => 'foo bar'\n \n_.lowerCase('__FOO_BAR__');\n// => 'foo bar'",
    parsed: [
      "'--Foo-Bar--'",
      "// => 'foo bar'",
      ' ',
      "'fooBar'",
      "// => 'foo bar'",
      ' ',
      "'__FOO_BAR__'",
      "// => 'foo bar'",
    ],
  },
  {
    text:
      "_.lowerFirst('Fred');\n// => 'fred'\n \n_.lowerFirst('FRED');\n// => 'fRED'",
    parsed: ["'Fred'", "// => 'fred'", ' ', "'FRED'", "// => 'fRED'"],
  },
  {
    text:
      "_.pad('abc', 8);\n// => '  abc   '\n \n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n \n_.pad('abc', 3);\n// => 'abc'",
    parsed: [
      "'abc', 8",
      "// => '  abc   '",
      ' ',
      "'abc', 8, '_-'",
      "// => '_-abc_-_'",
      ' ',
      "'abc', 3",
      "// => 'abc'",
    ],
  },
  {
    text:
      "_.padEnd('abc', 6);\n// => 'abc   '\n \n_.padEnd('abc', 6, '_-');\n// => 'abc_-_'\n \n_.padEnd('abc', 3);\n// => 'abc'",
    parsed: [
      "'abc', 6",
      "// => 'abc   '",
      ' ',
      "'abc', 6, '_-'",
      "// => 'abc_-_'",
      ' ',
      "'abc', 3",
      "// => 'abc'",
    ],
  },
  {
    text:
      "_.padStart('abc', 6);\n// => '   abc'\n \n_.padStart('abc', 6, '_-');\n// => '_-_abc'\n \n_.padStart('abc', 3);\n// => 'abc'",
    parsed: [
      "'abc', 6",
      "// => '   abc'",
      ' ',
      "'abc', 6, '_-'",
      "// => '_-_abc'",
      ' ',
      "'abc', 3",
      "// => 'abc'",
    ],
  },
  {
    text:
      "_.parseInt('08');\n// => 8\n \n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]",
    parsed: [
      "'08'",
      '// => 8',
      ' ',
      "['6', '08', '10'], _.parseInt",
      '// => [6, 8, 10]',
    ],
  },
  {
    text:
      "_.repeat('*', 3);\n// => '***'\n \n_.repeat('abc', 2);\n// => 'abcabc'\n \n_.repeat('abc', 0);\n// => ''",
    parsed: [
      "'*', 3",
      "// => '***'",
      ' ',
      "'abc', 2",
      "// => 'abcabc'",
      ' ',
      "'abc', 0",
      "// => ''",
    ],
  },
  {
    text: "_.replace('Hi Fred', 'Fred', 'Barney');\n// => 'Hi Barney'",
    parsed: ["'Hi Fred', 'Fred', 'Barney'", "// => 'Hi Barney'"],
  },
  {
    text:
      "_.snakeCase('Foo Bar');\n// => 'foo_bar'\n \n_.snakeCase('fooBar');\n// => 'foo_bar'\n \n_.snakeCase('--FOO-BAR--');\n// => 'foo_bar'",
    parsed: [
      "'Foo Bar'",
      "// => 'foo_bar'",
      ' ',
      "'fooBar'",
      "// => 'foo_bar'",
      ' ',
      "'--FOO-BAR--'",
      "// => 'foo_bar'",
    ],
  },
  {
    text: "_.split('a-b-c', '-', 2);\n// => ['a', 'b']",
    parsed: ["'a-b-c', '-', 2", "// => ['a', 'b']"],
  },
  {
    text:
      "_.startCase('--foo-bar--');\n// => 'Foo Bar'\n \n_.startCase('fooBar');\n// => 'Foo Bar'\n \n_.startCase('__FOO_BAR__');\n// => 'FOO BAR'",
    parsed: [
      "'--foo-bar--'",
      "// => 'Foo Bar'",
      ' ',
      "'fooBar'",
      "// => 'Foo Bar'",
      ' ',
      "'__FOO_BAR__'",
      "// => 'FOO BAR'",
    ],
  },
  {
    text:
      "_.startsWith('abc', 'a');\n// => true\n \n_.startsWith('abc', 'b');\n// => false\n \n_.startsWith('abc', 'b', 1);\n// => true",
    parsed: [
      "'abc', 'a'",
      '// => true',
      ' ',
      "'abc', 'b'",
      '// => false',
      ' ',
      "'abc', 'b', 1",
      '// => true',
    ],
  },
  {
    text:
      "// Use the \"interpolate\" delimiter to create a compiled template.\nvar compiled = _.template('hello <%= user %>!');\ncompiled({ 'user': 'fred' });\n// => 'hello fred!'\n \n// Use the HTML \"escape\" delimiter to escape data property values.\nvar compiled = _.template('<b><%- value %></b>');\ncompiled({ 'value': '<script>' });\n// => '<b>&lt;script&gt;</b>'\n \n// Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\nvar compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n \n// Use the internal `print` function in \"evaluate\" delimiters.\nvar compiled = _.template('<% print(\"hello \" + user); %>!');\ncompiled({ 'user': 'barney' });\n// => 'hello barney!'\n \n// Use the ES template literal delimiter as an \"interpolate\" delimiter.\n// Disable support by replacing the \"interpolate\" delimiter.\nvar compiled = _.template('hello ${ user }!');\ncompiled({ 'user': 'pebbles' });\n// => 'hello pebbles!'\n \n// Use backslashes to treat delimiters as plain text.\nvar compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\ncompiled({ 'value': 'ignored' });\n// => '<%- value %>'\n \n// Use the `imports` option to import `jQuery` as `jq`.\nvar text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\nvar compiled = _.template(text, { 'imports': { 'jq': jQuery } });\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n \n// Use the `sourceURL` option to specify a custom sourceURL for the template.\nvar compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\ncompiled(data);\n// => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n \n// Use the `variable` option to ensure a with-statement isn't used in the compiled template.\nvar compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\ncompiled.source;\n// => function(data) {\n//   var __t, __p = '';\n//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n//   return __p;\n// }\n \n// Use custom template delimiters.\n_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\nvar compiled = _.template('hello {{ user }}!');\ncompiled({ 'user': 'mustache' });\n// => 'hello mustache!'\n \n// Use the `source` property to inline compiled templates for meaningful\n// line numbers in error messages and stack traces.\nfs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n  var JST = {\\\n    \"main\": ' + _.template(mainText).source + '\\\n  };\\\n');",
    parsed: [
      '// Use the "interpolate" delimiter to create a compiled template.',
      "'hello <%= user %>!'",
      "compiled({ 'user': 'fred' });",
      "// => 'hello fred!'",
      ' ',
      '// Use the HTML "escape" delimiter to escape data property values.',
      "'<b><%- value %></b>'",
      "compiled({ 'value': '<script>' });",
      "// => '<b>&lt;script&gt;</b>'",
      ' ',
      '// Use the "evaluate" delimiter to execute JavaScript and generate HTML.',
      "'<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>'",
      "compiled({ 'users': ['fred', 'barney'] });",
      "// => '<li>fred</li><li>barney</li>'",
      ' ',
      '// Use the internal `print` function in "evaluate" delimiters.',
      '\'<% print("hello " + user); %>!\'',
      "compiled({ 'user': 'barney' });",
      "// => 'hello barney!'",
      ' ',
      '// Use the ES template literal delimiter as an "interpolate" delimiter.',
      '// Disable support by replacing the "interpolate" delimiter.',
      "'hello ${ user }!'",
      "compiled({ 'user': 'pebbles' });",
      "// => 'hello pebbles!'",
      ' ',
      '// Use backslashes to treat delimiters as plain text.',
      '\'<%= "\\\\<%- value %\\\\>" %>\'',
      "compiled({ 'value': 'ignored' });",
      "// => '<%- value %>'",
      ' ',
      '// Use the `imports` option to import `jQuery` as `jq`.',
      "var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';",
      "text, { 'imports': { 'jq': jQuery } }",
      "compiled({ 'users': ['fred', 'barney'] });",
      "// => '<li>fred</li><li>barney</li>'",
      ' ',
      '// Use the `sourceURL` option to specify a custom sourceURL for the template.',
      "'hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' }",
      'compiled(data);',
      '// => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.',
      ' ',
      "// Use the `variable` option to ensure a with-statement isn't used in the compiled template.",
      "'hi <%= data.user %>!', { 'variable': 'data' }",
      'compiled.source;',
      '// => function(data) {',
      "//   var __t, __p = '';",
      "//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';",
      '//   return __p;',
      '// }',
      ' ',
      '// Use custom template delimiters.',
      '_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;',
      "'hello {{ user }}!'",
      "compiled({ 'user': 'mustache' });",
      "// => 'hello mustache!'",
      ' ',
      '// Use the `source` property to inline compiled templates for meaningful',
      '// line numbers in error messages and stack traces.',
      "fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\",
      '  var JST = {\\',
      'mainText',
      '  };\\',
      "');",
    ],
  },
  {
    text:
      "_.toLower('--Foo-Bar--');\n// => '--foo-bar--'\n \n_.toLower('fooBar');\n// => 'foobar'\n \n_.toLower('__FOO_BAR__');\n// => '__foo_bar__'",
    parsed: [
      "'--Foo-Bar--'",
      "// => '--foo-bar--'",
      ' ',
      "'fooBar'",
      "// => 'foobar'",
      ' ',
      "'__FOO_BAR__'",
      "// => '__foo_bar__'",
    ],
  },
  {
    text:
      "_.toUpper('--foo-bar--');\n// => '--FOO-BAR--'\n \n_.toUpper('fooBar');\n// => 'FOOBAR'\n \n_.toUpper('__foo_bar__');\n// => '__FOO_BAR__'",
    parsed: [
      "'--foo-bar--'",
      "// => '--FOO-BAR--'",
      ' ',
      "'fooBar'",
      "// => 'FOOBAR'",
      ' ',
      "'__foo_bar__'",
      "// => '__FOO_BAR__'",
    ],
  },
  {
    text:
      "_.trim('  abc  ');\n// => 'abc'\n \n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n \n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar']",
    parsed: [
      "'  abc  '",
      "// => 'abc'",
      ' ',
      "'-_-abc-_-', '_-'",
      "// => 'abc'",
      ' ',
      "['  foo  ', '  bar  '], _.trim",
      "// => ['foo', 'bar']",
    ],
  },
  {
    text:
      "_.trimEnd('  abc  ');\n// => '  abc'\n \n_.trimEnd('-_-abc-_-', '_-');\n// => '-_-abc'",
    parsed: [
      "'  abc  '",
      "// => '  abc'",
      ' ',
      "'-_-abc-_-', '_-'",
      "// => '-_-abc'",
    ],
  },
  {
    text:
      "_.trimStart('  abc  ');\n// => 'abc  '\n \n_.trimStart('-_-abc-_-', '_-');\n// => 'abc-_-'",
    parsed: [
      "'  abc  '",
      "// => 'abc  '",
      ' ',
      "'-_-abc-_-', '_-'",
      "// => 'abc-_-'",
    ],
  },
  {
    text:
      "_.truncate('hi-diddly-ho there, neighborino');\n// => 'hi-diddly-ho there, neighbo...'\n \n_.truncate('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': ' '\n});\n// => 'hi-diddly-ho there,...'\n \n_.truncate('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': /,? +/\n});\n// => 'hi-diddly-ho there...'\n \n_.truncate('hi-diddly-ho there, neighborino', {\n  'omission': ' [...]'\n});\n// => 'hi-diddly-ho there, neig [...]'",
    parsed: [
      "'hi-diddly-ho there, neighborino'",
      "// => 'hi-diddly-ho there, neighbo...'",
      ' ',
      "_.truncate('hi-diddly-ho there, neighborino', {",
      "  'length': 24,",
      "  'separator': ' '",
      '});',
      "// => 'hi-diddly-ho there,...'",
      ' ',
      "_.truncate('hi-diddly-ho there, neighborino', {",
      "  'length': 24,",
      "  'separator': /,? +/",
      '});',
      "// => 'hi-diddly-ho there...'",
      ' ',
      "_.truncate('hi-diddly-ho there, neighborino', {",
      "  'omission': ' [...]'",
      '});',
      "// => 'hi-diddly-ho there, neig [...]'",
    ],
  },
  {
    text:
      "_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'",
    parsed: [
      "'fred, barney, &amp; pebbles'",
      "// => 'fred, barney, & pebbles'",
    ],
  },
  {
    text:
      "_.upperCase('--foo-bar');\n// => 'FOO BAR'\n \n_.upperCase('fooBar');\n// => 'FOO BAR'\n \n_.upperCase('__foo_bar__');\n// => 'FOO BAR'",
    parsed: [
      "'--foo-bar'",
      "// => 'FOO BAR'",
      ' ',
      "'fooBar'",
      "// => 'FOO BAR'",
      ' ',
      "'__foo_bar__'",
      "// => 'FOO BAR'",
    ],
  },
  {
    text:
      "_.upperFirst('fred');\n// => 'Fred'\n \n_.upperFirst('FRED');\n// => 'FRED'",
    parsed: ["'fred'", "// => 'Fred'", ' ', "'FRED'", "// => 'FRED'"],
  },
  {
    text:
      "_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n \n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']",
    parsed: [
      "'fred, barney, & pebbles'",
      "// => ['fred', 'barney', 'pebbles']",
      ' ',
      "'fred, barney, & pebbles', /[^, ]+/g",
      "// => ['fred', 'barney', '&', 'pebbles']",
    ],
  },
  {
    text:
      "// Avoid throwing errors for invalid selectors.\nvar elements = _.attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\n \nif (_.isError(elements)) {\n  elements = [];\n}",
    parsed: [
      '// Avoid throwing errors for invalid selectors.',
      'function(selector',
      '  return document.querySelectorAll(selector);',
      "}, '>_>');",
      ' ',
      'elements)',
      '  elements = [];',
      '}',
    ],
  },
  {
    text:
      "var view = {\n  'label': 'docs',\n  'click': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n \n_.bindAll(view, ['click']);\njQuery(element).on('click', view.click);\n// => Logs 'clicked docs' when clicked.",
    parsed: [
      'var view = {',
      "  'label': 'docs',",
      "  'click': function() {",
      "    console.log('clicked ' + this.label);",
      '  }',
      '};',
      ' ',
      "view, ['click']",
      "jQuery(element).on('click', view.click);",
      "// => Logs 'clicked docs' when clicked.",
    ],
  },
  {
    text:
      "var func = _.cond([\n  [_.matches({ 'a': 1 }),           _.constant('matches A')],\n  [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n  [_.stubTrue,                      _.constant('no match')]\n]);\n \nfunc({ 'a': 1, 'b': 2 });\n// => 'matches A'\n \nfunc({ 'a': 0, 'b': 1 });\n// => 'matches B'\n \nfunc({ 'a': '1', 'b': '2' });\n// => 'no match'",
    parsed: [
      'var func = _.cond([',
      "{ 'a': 1 }),           _.constant('matches A'",
      "{ 'b': _.isNumber }), _.constant('matches B'",
      "'no match'",
      ']);',
      ' ',
      "func({ 'a': 1, 'b': 2 });",
      "// => 'matches A'",
      ' ',
      "func({ 'a': 0, 'b': 1 });",
      "// => 'matches B'",
      ' ',
      "func({ 'a': '1', 'b': '2' });",
      "// => 'no match'",
    ],
  },
  {
    text:
      "var objects = [\n  { 'a': 2, 'b': 1 },\n  { 'a': 1, 'b': 2 }\n];\n \n_.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n// => [{ 'a': 1, 'b': 2 }]",
    parsed: [
      'var objects = [',
      "  { 'a': 2, 'b': 1 },",
      "  { 'a': 1, 'b': 2 }",
      '];',
      ' ',
      "objects, _.conforms({ 'b': function(n) { return n > 1; } })",
      "// => [{ 'a': 1, 'b': 2 }]",
    ],
  },
  {
    text:
      "var objects = _.times(2, _.constant({ 'a': 1 }));\n \nconsole.log(objects);\n// => [{ 'a': 1 }, { 'a': 1 }]\n \nconsole.log(objects[0] === objects[1]);\n// => true",
    parsed: [
      "2, _.constant({ 'a': 1 })",
      ' ',
      'console.log(objects);',
      "// => [{ 'a': 1 }, { 'a': 1 }]",
      ' ',
      'console.log(objects[0] === objects[1]);',
      '// => true',
    ],
  },
  {
    text:
      '_.defaultTo(1, 10);\n// => 1\n \n_.defaultTo(undefined, 10);\n// => 10',
    parsed: ['1, 10', '// => 1', ' ', 'undefined, 10', '// => 10'],
  },
  {
    text:
      'function square(n) {\n  return n * n;\n}\n \nvar addSquare = _.flow([_.add, square]);\naddSquare(1, 2);\n// => 9',
    parsed: [
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      '[_.add, square]',
      'addSquare(1, 2);',
      '// => 9',
    ],
  },
  {
    text:
      'function square(n) {\n  return n * n;\n}\n \nvar addSquare = _.flowRight([square, _.add]);\naddSquare(1, 2);\n// => 9',
    parsed: [
      'function square(n) {',
      '  return n * n;',
      '}',
      ' ',
      '[square, _.add]',
      'addSquare(1, 2);',
      '// => 9',
    ],
  },
  {
    text:
      "var object = { 'a': 1 };\n \nconsole.log(_.identity(object) === object);\n// => true",
    parsed: [
      "var object = { 'a': 1 };",
      ' ',
      'object) === object',
      '// => true',
    ],
  },
  {
    text:
      "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n \n// The `_.matches` iteratee shorthand.\n_.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n// => [{ 'user': 'barney', 'age': 36, 'active': true }]\n \n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, _.iteratee(['user', 'fred']));\n// => [{ 'user': 'fred', 'age': 40 }]\n \n// The `_.property` iteratee shorthand.\n_.map(users, _.iteratee('user'));\n// => ['barney', 'fred']\n \n// Create custom iteratee shorthands.\n_.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n  return !_.isRegExp(func) ? iteratee(func) : function(string) {\n    return func.test(string);\n  };\n});\n \n_.filter(['abc', 'def'], /ef/);\n// => ['def']",
    parsed: [
      'var users = [',
      "  { 'user': 'barney', 'age': 36, 'active': true },",
      "  { 'user': 'fred',   'age': 40, 'active': false }",
      '];',
      ' ',
      '// The `_.matches` iteratee shorthand.',
      "users, _.iteratee({ 'user': 'barney', 'active': true })",
      "// => [{ 'user': 'barney', 'age': 36, 'active': true }]",
      ' ',
      '// The `_.matchesProperty` iteratee shorthand.',
      "users, _.iteratee(['user', 'fred'])",
      "// => [{ 'user': 'fred', 'age': 40 }]",
      ' ',
      '// The `_.property` iteratee shorthand.',
      "users, _.iteratee('user')",
      "// => ['barney', 'fred']",
      ' ',
      '// Create custom iteratee shorthands.',
      '_.iteratee, function(iteratee, func',
      'func) ? iteratee(func) : function(string',
      '    return func.test(string);',
      '  };',
      '});',
      ' ',
      "['abc', 'def'], /ef/",
      "// => ['def']",
    ],
  },
  {
    text:
      "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n \n_.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n// => [{ 'a': 4, 'b': 5, 'c': 6 }]",
    parsed: [
      'var objects = [',
      "  { 'a': 1, 'b': 2, 'c': 3 },",
      "  { 'a': 4, 'b': 5, 'c': 6 }",
      '];',
      ' ',
      "objects, _.matches({ 'a': 4, 'c': 6 })",
      "// => [{ 'a': 4, 'b': 5, 'c': 6 }]",
    ],
  },
  {
    text:
      "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n \n_.find(objects, _.matchesProperty('a', 4));\n// => { 'a': 4, 'b': 5, 'c': 6 }",
    parsed: [
      'var objects = [',
      "  { 'a': 1, 'b': 2, 'c': 3 },",
      "  { 'a': 4, 'b': 5, 'c': 6 }",
      '];',
      ' ',
      "objects, _.matchesProperty('a', 4)",
      "// => { 'a': 4, 'b': 5, 'c': 6 }",
    ],
  },
  {
    text:
      "var objects = [\n  { 'a': { 'b': _.constant(2) } },\n  { 'a': { 'b': _.constant(1) } }\n];\n \n_.map(objects, _.method('a.b'));\n// => [2, 1]\n \n_.map(objects, _.method(['a', 'b']));\n// => [2, 1]",
    parsed: [
      'var objects = [',
      '2',
      '1',
      '];',
      ' ',
      "objects, _.method('a.b')",
      '// => [2, 1]',
      ' ',
      "objects, _.method(['a', 'b'])",
      '// => [2, 1]',
    ],
  },
  {
    text:
      "var array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n \n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n \n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]",
    parsed: [
      '3, _.constant',
      "    object = { 'a': array, 'b': array, 'c': array };",
      ' ',
      "['a[2]', 'c[0]'], _.methodOf(object)",
      '// => [2, 0]',
      ' ',
      "[['a', '2'], ['c', '0']], _.methodOf(object)",
      '// => [2, 0]',
    ],
  },
  {
    text:
      "function vowels(string) {\n  return _.filter(string, function(v) {\n    return /[aeiou]/i.test(v);\n  });\n}\n \n_.mixin({ 'vowels': vowels });\n_.vowels('fred');\n// => ['e']\n \n_('fred').vowels().value();\n// => ['e']\n \n_.mixin({ 'vowels': vowels }, { 'chain': false });\n_('fred').vowels();\n// => ['e']",
    parsed: [
      'function vowels(string) {',
      'string, function(v',
      '    return /[aeiou]/i.test(v);',
      '  });',
      '}',
      ' ',
      "{ 'vowels': vowels }",
      "'fred'",
      "// => ['e']",
      ' ',
      "_('fred').vowels().value();",
      "// => ['e']",
      ' ',
      "{ 'vowels': vowels }, { 'chain': false }",
      "_('fred').vowels();",
      "// => ['e']",
    ],
  },
  {
    text: 'var lodash = _.noConflict();',
    parsed: ['var lodash = _.noConflict();'],
  },
  {
    text: '_.times(2, _.noop);\n// => [undefined, undefined]',
    parsed: ['2, _.noop', '// => [undefined, undefined]'],
  },
  {
    text:
      "var func = _.nthArg(1);\nfunc('a', 'b', 'c', 'd');\n// => 'b'\n \nvar func = _.nthArg(-2);\nfunc('a', 'b', 'c', 'd');\n// => 'c'",
    parsed: [
      '1',
      "func('a', 'b', 'c', 'd');",
      "// => 'b'",
      ' ',
      '-2',
      "func('a', 'b', 'c', 'd');",
      "// => 'c'",
    ],
  },
  {
    text:
      'var func = _.over([Math.max, Math.min]);\n \nfunc(1, 2, 3, 4);\n// => [4, 1]',
    parsed: ['[Math.max, Math.min]', ' ', 'func(1, 2, 3, 4);', '// => [4, 1]'],
  },
  {
    text:
      "var func = _.overEvery([Boolean, isFinite]);\n \nfunc('1');\n// => true\n \nfunc(null);\n// => false\n \nfunc(NaN);\n// => false",
    parsed: [
      '[Boolean, isFinite]',
      ' ',
      "func('1');",
      '// => true',
      ' ',
      'func(null);',
      '// => false',
      ' ',
      'func(NaN);',
      '// => false',
    ],
  },
  {
    text:
      "var func = _.overSome([Boolean, isFinite]);\n \nfunc('1');\n// => true\n \nfunc(null);\n// => true\n \nfunc(NaN);\n// => false",
    parsed: [
      '[Boolean, isFinite]',
      ' ',
      "func('1');",
      '// => true',
      ' ',
      'func(null);',
      '// => true',
      ' ',
      'func(NaN);',
      '// => false',
    ],
  },
  {
    text:
      "var objects = [\n  { 'a': { 'b': 2 } },\n  { 'a': { 'b': 1 } }\n];\n \n_.map(objects, _.property('a.b'));\n// => [2, 1]\n \n_.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n// => [1, 2]",
    parsed: [
      'var objects = [',
      "  { 'a': { 'b': 2 } },",
      "  { 'a': { 'b': 1 } }",
      '];',
      ' ',
      "objects, _.property('a.b')",
      '// => [2, 1]',
      ' ',
      "_.sortBy(objects, _.property(['a', 'b'])), 'a.b'",
      '// => [1, 2]',
    ],
  },
  {
    text:
      "var array = [0, 1, 2],\n    object = { 'a': array, 'b': array, 'c': array };\n \n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n// => [2, 0]\n \n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n// => [2, 0]",
    parsed: [
      'var array = [0, 1, 2],',
      "    object = { 'a': array, 'b': array, 'c': array };",
      ' ',
      "['a[2]', 'c[0]'], _.propertyOf(object)",
      '// => [2, 0]',
      ' ',
      "[['a', '2'], ['c', '0']], _.propertyOf(object)",
      '// => [2, 0]',
    ],
  },
  {
    text:
      '_.range(4);\n// => [0, 1, 2, 3]\n \n_.range(-4);\n// => [0, -1, -2, -3]\n \n_.range(1, 5);\n// => [1, 2, 3, 4]\n \n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n \n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n \n_.range(1, 4, 0);\n// => [1, 1, 1]\n \n_.range(0);\n// => []',
    parsed: [
      '4',
      '// => [0, 1, 2, 3]',
      ' ',
      '-4',
      '// => [0, -1, -2, -3]',
      ' ',
      '1, 5',
      '// => [1, 2, 3, 4]',
      ' ',
      '0, 20, 5',
      '// => [0, 5, 10, 15]',
      ' ',
      '0, -4, -1',
      '// => [0, -1, -2, -3]',
      ' ',
      '1, 4, 0',
      '// => [1, 1, 1]',
      ' ',
      '0',
      '// => []',
    ],
  },
  {
    text:
      '_.rangeRight(4);\n// => [3, 2, 1, 0]\n \n_.rangeRight(-4);\n// => [-3, -2, -1, 0]\n \n_.rangeRight(1, 5);\n// => [4, 3, 2, 1]\n \n_.rangeRight(0, 20, 5);\n// => [15, 10, 5, 0]\n \n_.rangeRight(0, -4, -1);\n// => [-3, -2, -1, 0]\n \n_.rangeRight(1, 4, 0);\n// => [1, 1, 1]\n \n_.rangeRight(0);\n// => []',
    parsed: [
      '4',
      '// => [3, 2, 1, 0]',
      ' ',
      '-4',
      '// => [-3, -2, -1, 0]',
      ' ',
      '1, 5',
      '// => [4, 3, 2, 1]',
      ' ',
      '0, 20, 5',
      '// => [15, 10, 5, 0]',
      ' ',
      '0, -4, -1',
      '// => [-3, -2, -1, 0]',
      ' ',
      '1, 4, 0',
      '// => [1, 1, 1]',
      ' ',
      '0',
      '// => []',
    ],
  },
  {
    text:
      "_.mixin({ 'foo': _.constant('foo') });\n \nvar lodash = _.runInContext();\nlodash.mixin({ 'bar': lodash.constant('bar') });\n \n_.isFunction(_.foo);\n// => true\n_.isFunction(_.bar);\n// => false\n \nlodash.isFunction(lodash.foo);\n// => false\nlodash.isFunction(lodash.bar);\n// => true\n \n// Create a suped-up `defer` in Node.js.\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;",
    parsed: [
      "{ 'foo': _.constant('foo') }",
      ' ',
      'var lodash = _.runInContext();',
      "lodash.mixin({ 'bar': lodash.constant('bar') });",
      ' ',
      '_.foo',
      '// => true',
      '_.bar',
      '// => false',
      ' ',
      'lodash.isFunction(lodash.foo);',
      '// => false',
      'lodash.isFunction(lodash.bar);',
      '// => true',
      ' ',
      '// Create a suped-up `defer` in Node.js.',
      "{ 'setTimeout': setImmediate }",
    ],
  },
  {
    text:
      'var arrays = _.times(2, _.stubArray);\n \nconsole.log(arrays);\n// => [[], []]\n \nconsole.log(arrays[0] === arrays[1]);\n// => false',
    parsed: [
      '2, _.stubArray',
      ' ',
      'console.log(arrays);',
      '// => [[], []]',
      ' ',
      'console.log(arrays[0] === arrays[1]);',
      '// => false',
    ],
  },
  {
    text: '_.times(2, _.stubFalse);\n// => [false, false]',
    parsed: ['2, _.stubFalse', '// => [false, false]'],
  },
  {
    text:
      'var objects = _.times(2, _.stubObject);\n \nconsole.log(objects);\n// => [{}, {}]\n \nconsole.log(objects[0] === objects[1]);\n// => false',
    parsed: [
      '2, _.stubObject',
      ' ',
      'console.log(objects);',
      '// => [{}, {}]',
      ' ',
      'console.log(objects[0] === objects[1]);',
      '// => false',
    ],
  },
  {
    text: "_.times(2, _.stubString);\n// => ['', '']",
    parsed: ['2, _.stubString', "// => ['', '']"],
  },
  {
    text: '_.times(2, _.stubTrue);\n// => [true, true]',
    parsed: ['2, _.stubTrue', '// => [true, true]'],
  },
  {
    text:
      "_.times(3, String);\n// => ['0', '1', '2']\n \n _.times(4, _.constant(0));\n// => [0, 0, 0, 0]",
    parsed: [
      '3, String',
      "// => ['0', '1', '2']",
      ' ',
      '4, _.constant(0)',
      '// => [0, 0, 0, 0]',
    ],
  },
  {
    text:
      "_.toPath('a.b.c');\n// => ['a', 'b', 'c']\n \n_.toPath('a[0].b.c');\n// => ['a', '0', 'b', 'c']",
    parsed: [
      "'a.b.c'",
      "// => ['a', 'b', 'c']",
      ' ',
      "'a[0].b.c'",
      "// => ['a', '0', 'b', 'c']",
    ],
  },
  {
    text:
      "_.uniqueId('contact_');\n// => 'contact_104'\n \n_.uniqueId();\n// => '105'",
    parsed: [
      "'contact_'",
      "// => 'contact_104'",
      ' ',
      '_.uniqueId();',
      "// => '105'",
    ],
  },
]
